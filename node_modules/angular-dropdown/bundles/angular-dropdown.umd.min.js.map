{"version":3,"sources":["ng://angular-dropdown/lib/angular-dropdown-control.directive.ts","ng://angular-dropdown/lib/utils.ts","ng://angular-dropdown/lib/angular-dropdown.directive.ts","ng://angular-dropdown/lib/angular-dropdown-content.component.ts","ng://angular-dropdown/lib/angular-dropdown.module.ts"],"names":["AngularDropdownControlDirective","dropdown","element","this","prototype","onClick","e","stopPropagation","disabled","toggle","Directive","args","selector","host","[attr.aria-haspopup]","[attr.aria-controls]","[attr.aria-expanded]","[class.ng-dropdown-control]","[class.active]","AngularDropdownDirective","decorators","type","Host","Inject","forwardRef","ElementRef","HostListener","waitForAnimation","callback","requestAnimationFrame","computedStyle","window","getComputedStyle","animationName","animationPlayState","once","eventName","listener","addEventListener","listenOnce","removeEventListener","closest","Element","el","s","self","i","matches","document","ownerDocument","querySelectorAll","length","item","parentElement","calculatePosition","trigger","_a","horizontalPosition","verticalPosition","matchTriggerWidth","previousHorizontalPosition","previousVerticalPosition","scroll","pageXOffset","pageYOffset","_b","getBoundingClientRect","triggerLeft","left","triggerTop","top","triggerWidth","width","triggerHeight","height","_c","dropdownHeight","dropdownWidth","viewportWidth","innerWidth","style","triggerLeftWithScroll","leftVisible","Math","min","max","rightVisible","right","triggerTopWithScroll","enoughRoomBelow","innerHeight","enoughRoomAbove","calculateInPlacePosition","dropdownRect","positionData","triggerRect","viewportRight","_id","EmptyDropdownContentPosition","Object","freeze","vPosition","hPosition","bottom","id","_this","renderInPlace","control","_isOpen$","BehaviorSubject","isOpen$","pipe","skip","position$","beforeOpen","beforeClose","onOpen","filter","open","onClose","uniqueId","reposition","getValue","dropdownElement","triggerElement","_calculatePosition","options","applyReposition","initializeId","createDefaultWormholeOutlet","defineProperty","nativeElement","getElementById","dropdownId","ngOnChanges","firstChange","currentValue","previousValue","disable","open$","of","result","Observable","first","subscribe","next","close","skipFocus","close$","assign","HTMLElement","tabIndex","focus","enable","positions","changes","keys","forEach","k","generateDropdownId","outlet","createElement","body","insertBefore","firstChild","[class.render-in-place]","[class.ng-dropdown]","DOCUMENT","Attribute","Input","ContentChild","Output","AngularDropdownContentComponent","MutationObserver","zone","dropdownClass","overlay","hasMoved","_animationClass","isTouchDevice","mutationObserver","destroy$","Subject","transitioningInClass","transitionedInClass","transitioningOutClass","shouldOpen","repositionInZone","run","handleRootMouseDown","target","contains","closestDropdown","querySelector","getAttribute","parentDropdown","touchStartHandler","touchMoveHandler","ngOnInit","takeUntil","className","classList","remove","add","ngAfterViewChecked","animationClass","ngOnDestroy","teardownEvents","startObservingDomMutations","addGlobalEvents","animateIn","animateOut","clone","cloneNode","appendChild","removeChild","undefined","mutations","addedNodes","removedNodes","observe","childList","subtree","stopObservingDomMutations","disconnect","removeGlobalEvents","Component","template","NgZone","AngularDropdownModule","NgModule","imports","CommonModule","NgWormholeModule","declarations","exports"],"mappings":"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","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Inject,\n  forwardRef,\n  Input,\n  Host,\n  HostListener\n} from '@angular/core';\n\nimport { AngularDropdownDirective }\n  from './angular-dropdown.directive';\n\n@Directive({\n  selector: '[ng-dropdown-control],[ngDropdownControl]',\n  host: {\n    '[attr.aria-haspopup]': 'true',\n    '[attr.aria-controls]': 'dropdown.id',\n    '[attr.aria-expanded]': 'dropdown.isOpen',\n    '[class.ng-dropdown-control]': 'true',\n    '[class.active]': 'dropdown.isOpen'\n  }\n})\nexport class AngularDropdownControlDirective {\n  @HostListener('click', [ '$event' ])\n  onClick(e: Event): void {\n    e.stopPropagation();\n\n    if (!this.dropdown.disabled) {\n      this.dropdown.toggle();\n    }\n  }\n\n  constructor(\n      @Host()\n      @Inject(forwardRef(() => AngularDropdownDirective))\n      public dropdown: AngularDropdownDirective,\n      public element: ElementRef) {\n  }\n}\n","export function waitForAnimation(\n  element: Element | null,\n  callback: (e?: Event) => any\n): void {\n  if (element === null) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    const computedStyle = window.getComputedStyle(element);\n\n    if (\n      computedStyle.animationName !== 'none' &&\n      computedStyle.animationPlayState === 'running'\n    ) {\n      return once(element, 'animationend', callback);\n    }\n\n    callback();\n  });\n}\n\nfunction once(\n  element: Node,\n  eventName: string,\n  listener: (e: Event) => any\n): void {\n  element.addEventListener(eventName, function listenOnce(e) {\n    element.removeEventListener(eventName, listenOnce);\n\n    return listener(e);\n  });\n}\n\nexport const closest: (element: Element, selector: string) => Element | null =\n  (window as any).Element && Element.prototype.closest\n    ? (el, s) => el.closest(s)\n    : function _closest(self: Element, s: string) {\n        const matches = (\n          (self as any).document || self.ownerDocument\n        ).querySelectorAll(s);\n        let i;\n        let el: Element | null = self;\n        do {\n          i = matches.length;\n          while (--i >= 0 && matches.item(i) !== el) {}\n        } while (i < 0 && (el = el.parentElement));\n        return el;\n      };\n\nexport function calculatePosition(\n  trigger: Element,\n  dropdown: Element,\n  {\n    horizontalPosition,\n    verticalPosition,\n    matchTriggerWidth,\n    previousHorizontalPosition,\n    previousVerticalPosition\n  }: any\n): any {\n  // Collect information about all the involved DOM elements\n  const scroll = { left: window.pageXOffset, top: window.pageYOffset };\n  const {\n    left: triggerLeft,\n    top: triggerTop,\n    width: triggerWidth,\n    height: triggerHeight\n  } = trigger.getBoundingClientRect();\n  let {\n    height: dropdownHeight,\n    width: dropdownWidth\n  } = dropdown.getBoundingClientRect();\n  const viewportWidth = window.innerWidth;\n  const style: any = {};\n\n  // Calculate drop down width\n  dropdownWidth = matchTriggerWidth ? triggerWidth : dropdownWidth;\n  if (matchTriggerWidth) {\n    style.width = dropdownWidth;\n  }\n\n  // Calculate horizontal position\n  const triggerLeftWithScroll = triggerLeft + scroll.left;\n  if (horizontalPosition === 'auto') {\n    // Calculate the number of visible horizontal pixels if we were to place the\n    // dropdown on the left and right\n    const leftVisible =\n      Math.min(viewportWidth, triggerLeft + dropdownWidth) -\n      Math.max(0, triggerLeft);\n    const rightVisible =\n      Math.min(viewportWidth, triggerLeft + triggerWidth) -\n      Math.max(0, triggerLeft + triggerWidth - dropdownWidth);\n\n    if (dropdownWidth > leftVisible && rightVisible > leftVisible) {\n      // If the drop down won't fit left-aligned, and there is more space on the\n      // right than on the left, then force right-aligned\n      horizontalPosition = 'right';\n    } else if (dropdownWidth > rightVisible && leftVisible > rightVisible) {\n      // If the drop down won't fit right-aligned, and there is more space on\n      // the left than on the right, then force left-aligned\n      horizontalPosition = 'left';\n    } else {\n      // Keep same position as previous\n      horizontalPosition = previousHorizontalPosition || 'left';\n    }\n  }\n  if (horizontalPosition === 'right') {\n    style.right = viewportWidth - (triggerLeftWithScroll + triggerWidth);\n  } else if (horizontalPosition === 'center') {\n    style.left = triggerLeftWithScroll + (triggerWidth - dropdownWidth) / 2;\n  } else {\n    style.left = triggerLeftWithScroll;\n  }\n\n  // Calculate vertical position\n  const triggerTopWithScroll = triggerTop + scroll.top;\n  if (verticalPosition === 'above') {\n    style.top = triggerTopWithScroll - dropdownHeight;\n  } else if (verticalPosition === 'below') {\n    style.top = triggerTopWithScroll + triggerHeight;\n  } else {\n    const viewportBottom = scroll.top + self.window.innerHeight;\n    const enoughRoomBelow =\n      triggerTopWithScroll + triggerHeight + dropdownHeight < viewportBottom;\n    const enoughRoomAbove = triggerTop > dropdownHeight;\n\n    if (\n      previousVerticalPosition === 'below' &&\n      !enoughRoomBelow &&\n      enoughRoomAbove\n    ) {\n      verticalPosition = 'above';\n    } else if (\n      previousVerticalPosition === 'above' &&\n      !enoughRoomAbove &&\n      enoughRoomBelow\n    ) {\n      verticalPosition = 'below';\n    } else if (!previousVerticalPosition) {\n      verticalPosition = enoughRoomBelow ? 'below' : 'above';\n    } else {\n      verticalPosition = previousVerticalPosition;\n    }\n    style.top =\n      triggerTopWithScroll +\n      (verticalPosition === 'below' ? triggerHeight : -dropdownHeight);\n  }\n\n  return { horizontalPosition, verticalPosition, style };\n}\n\nexport function calculateInPlacePosition(\n  trigger: Element,\n  dropdown: Element,\n  { horizontalPosition, verticalPosition }: any\n) {\n  let dropdownRect;\n  const positionData: any = {};\n\n  if (horizontalPosition === 'auto') {\n    const triggerRect = trigger.getBoundingClientRect();\n    dropdownRect = dropdown.getBoundingClientRect();\n    const viewportRight = window.pageXOffset + window.innerWidth;\n    positionData.horizontalPosition =\n      triggerRect.left + dropdownRect.width > viewportRight ? 'right' : 'left';\n  }\n  if (verticalPosition === 'above') {\n    positionData.verticalPosition = verticalPosition;\n    dropdownRect = dropdownRect || dropdown.getBoundingClientRect();\n    positionData.style = { top: -dropdownRect.height };\n  }\n  return positionData;\n}\n","import { Observable, BehaviorSubject, of } from 'rxjs';\nimport { skip, first, filter } from 'rxjs/operators';\n\nimport {\n  Component,\n  Directive,\n  Attribute,\n  Inject,\n  Input,\n  Output,\n  ElementRef,\n  AfterViewInit,\n  OnChanges,\n  ContentChild,\n  SimpleChanges,\n  EventEmitter,\n  QueryList,\n  ViewContainerRef,\n  forwardRef\n} from '@angular/core';\n\nimport { DOCUMENT } from '@angular/common';\n\nimport { AngularDropdownControlDirective } from './angular-dropdown-control.directive';\nimport { AngularDropdownContentComponent } from './angular-dropdown-content.component';\n\nimport { calculatePosition, calculateInPlacePosition } from './utils';\n\nexport interface AngularDropdownPositionChanges {\n  vPosition: 'above' | 'below';\n  hPosition: 'right' | 'center' | 'left';\n}\n\nlet _id = 1;\nfunction generateDropdownId() {\n  return _id++;\n}\n\nexport type VerticalPosition = 'auto' | 'above' | 'below';\nexport type HorizontalPosition = 'auto' | 'right' | 'center' | 'left';\n\nexport interface DropdownContentPosition {\n  readonly hPosition: HorizontalPosition | null;\n  readonly vPosition: VerticalPosition | null;\n  readonly top: string | null;\n  readonly left: string | null;\n  readonly bottom: string | null;\n  readonly right: string | null;\n}\n\nconst EmptyDropdownContentPosition = Object.freeze({\n  vPosition: null,\n  hPosition: null,\n  top: null,\n  left: null,\n  bottom: null,\n  right: null\n});\n\n@Directive({\n  selector: 'ng-dropdown,[ngDropdown],[ng-dropdown]',\n  host: {\n    '[class.render-in-place]': 'renderInPlace',\n    '[class.ng-dropdown]': 'true'\n  }\n})\nexport class AngularDropdownDirective implements OnChanges {\n  id?: string;\n\n  @Input()\n  renderInPlace = false;\n\n  @ContentChild(AngularDropdownControlDirective)\n  control: AngularDropdownControlDirective | null = null;\n\n  previousVerticalPosition: VerticalPosition | null = null;\n  previousHorizontalPosition: HorizontalPosition | null = null;\n  matchTriggerWidth = false;\n\n  private _isOpen$ = new BehaviorSubject(false);\n  isOpen$ = this._isOpen$.pipe(skip(1));\n\n  position$ = new BehaviorSubject<Readonly<DropdownContentPosition>>(\n    EmptyDropdownContentPosition\n  );\n\n  get dropdownId() {\n    return `ng-dropdown-content-${this.uniqueId}`;\n  }\n\n  @Input()\n  calculatePosition: Function = calculatePosition;\n  @Input()\n  calculateInPlacePosition: Function = calculateInPlacePosition;\n\n  @Input()\n  disabled = false;\n\n  @Input()\n  beforeOpen: (() => boolean | Observable<boolean>) | null = null;\n\n  @Input()\n  beforeClose: (() => boolean | Observable<boolean>) | null = null;\n\n  @Input()\n  public verticalPosition: VerticalPosition = 'auto';\n  @Input()\n  public horizontalPosition: HorizontalPosition = 'auto';\n\n  @Output('open')\n  onOpen = this.isOpen$.pipe(filter(open => open === true));\n\n  @Output('close')\n  onClose = this.isOpen$.pipe(filter(open => open === false));\n\n  get triggerElement(): HTMLElement | null {\n    return this.control && this.control.element.nativeElement;\n  }\n\n  get dropdownElement(): HTMLElement | null {\n    return this.document.getElementById(this.dropdownId);\n  }\n\n  @ContentChild(forwardRef(() => AngularDropdownContentComponent))\n  private dropdownContent?: AngularDropdownContentComponent;\n\n  private uniqueId: number | string | null = null;\n  private width: number | null = null;\n  private document: Document;\n\n  constructor(@Inject(DOCUMENT) document: any, @Attribute('id') id?: string) {\n    this.document = document;\n    this.initializeId(id);\n    this.createDefaultWormholeOutlet();\n  }\n\n  ngOnChanges({ disabled }: SimpleChanges): void {\n    if (\n      disabled &&\n      disabled.firstChange === false &&\n      disabled.currentValue === true &&\n      disabled.previousValue !== true\n    ) {\n      this.disable();\n    }\n  }\n\n  open(): void {\n    if (this.disabled || this._isOpen$.getValue()) {\n      return;\n    }\n\n    let open$ = of(true);\n\n    if (this.beforeOpen) {\n      const result = this.beforeOpen();\n      open$ = result instanceof Observable ? result : of(result);\n    }\n\n    open$\n      .pipe(\n        first(),\n        filter(open => open === true)\n      )\n      .subscribe(() => this._isOpen$.next(true));\n  }\n\n  close(skipFocus = false): void {\n    if (this.disabled || !this._isOpen$.getValue()) {\n      return;\n    }\n\n    let close$ = of(true);\n\n    if (this.beforeClose) {\n      const result = this.beforeClose();\n      close$ = result instanceof Observable ? result : of(result);\n    }\n\n    close$\n      .pipe(\n        first(),\n        filter(close => close === true)\n      )\n      .subscribe(() => {\n        Object.assign(this, {\n          hPosition: null,\n          vPosition: null,\n          top: null,\n          right: null,\n          bottom: null,\n          left: null,\n          width: null,\n          previousVerticalPosition: null,\n          previousHorizontalPosition: null\n        });\n        this._isOpen$.next(false);\n\n        if (!skipFocus) {\n          if (\n            this.triggerElement instanceof HTMLElement &&\n            this.triggerElement.tabIndex > -1\n          ) {\n            this.triggerElement.focus();\n          }\n        }\n      });\n  }\n\n  toggle(): void {\n    if (this._isOpen$.getValue()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  disable(): void {\n    this.disabled = true;\n    this.close();\n  }\n\n  enable(): void {\n    this.disabled = false;\n  }\n\n  reposition = (): AngularDropdownPositionChanges | null => {\n    if (!this._isOpen$.getValue()) {\n      return null;\n    }\n\n    const dropdownElement = this.dropdownElement;\n    if (!dropdownElement || !this.triggerElement) {\n      return null;\n    }\n\n    const _calculatePosition = this.renderInPlace\n      ? this.calculateInPlacePosition\n      : this.calculatePosition;\n\n    const options = {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      matchTriggerWidth: this.matchTriggerWidth,\n      previousHorizontalPosition: this.previousHorizontalPosition,\n      previousVerticalPosition: this.previousVerticalPosition\n    };\n\n    const positionData = _calculatePosition(\n      this.triggerElement,\n      dropdownElement,\n      options\n    );\n\n    return this.applyReposition(\n      this.triggerElement,\n      dropdownElement,\n      positionData\n    );\n  };\n\n  private applyReposition(\n    trigger: Element,\n    dropdown: HTMLElement,\n    positions: any\n  ): AngularDropdownPositionChanges {\n    const changes: any = {\n      hPosition: positions.horizontalPosition,\n      vPosition: positions.verticalPosition\n    };\n    if (positions.style) {\n      changes.top = `${positions.style.top}px`;\n      // The component can be aligned from the right or from the left, but not from both.\n      if (positions.style.left != null) {\n        changes.left = `${positions.style.left}px`;\n        changes.right = null;\n      } else if (positions.style.right != null) {\n        changes.right = `${positions.style.right}px`;\n        changes.left = null;\n      }\n      if (positions.style.width != null) {\n        changes.width = `${positions.style.width}px`;\n      }\n      if (this.position$.getValue().top == null) {\n        // Bypass on the first reposition only to avoid flickering.\n        Object.keys(positions.style).forEach(\n          k => (dropdown.style[k as any] = positions.style[k])\n        );\n      }\n    }\n\n    this.position$.next(changes);\n\n    this.previousHorizontalPosition = positions.horizontalPosition;\n    this.previousVerticalPosition = positions.verticalPosition;\n\n    return changes;\n  }\n\n  private initializeId(id?: string): void {\n    if (id) {\n      this.id = this.uniqueId = id;\n    } else {\n      this.uniqueId = generateDropdownId();\n      this.id = `ng-dropdown-${this.uniqueId}`;\n    }\n  }\n\n  private createDefaultWormholeOutlet(): void {\n    if (!this.document.getElementById('ng-dropdown-outlet')) {\n      const outlet = this.document.createElement('div');\n      outlet.id = 'ng-dropdown-outlet';\n      this.document.body.insertBefore(outlet, this.document.body.firstChild);\n    }\n  }\n}\n","import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n  Component,\n  Input,\n  Host,\n  Inject,\n  forwardRef,\n  AfterViewChecked,\n  OnInit,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\n\nimport { DOCUMENT } from '@angular/common';\n\nimport { AngularDropdownDirective } from './angular-dropdown.directive';\nimport { closest, waitForAnimation } from './utils';\n\nconst MutationObserver = (window as any).MutationObserver;\n\n@Component({\n  selector: 'ng-dropdown-content,[ng-dropdown-content],[ngDropdownContent]',\n  templateUrl: './angular-dropdown-content.component.html',\n  styleUrls: ['./angular-dropdown-content.component.css'],\n  host: {\n    '[class.render-in-place]': 'dropdown.renderInPlace'\n  }\n})\nexport class AngularDropdownContentComponent\n  implements OnInit, AfterViewChecked, OnDestroy {\n  @Input()\n  dropdownClass = '';\n\n  @Input()\n  overlay = false;\n\n  private hasMoved = false;\n  private _animationClass: string | null = null;\n  private isTouchDevice: boolean = 'ontouchstart' in window;\n  private mutationObserver: MutationObserver | null = null;\n  private destroy$ = new Subject<void>();\n\n  @Input()\n  transitioningInClass = 'ng-dropdown-content--transitioning-in';\n  @Input()\n  transitionedInClass = 'ng-dropdown-content--transitioned-in';\n  @Input()\n  transitioningOutClass = 'ng-dropdown-content--transitioning-out';\n\n  private get dropdownElement(): HTMLElement | null {\n    return this.dropdown.dropdownElement;\n  }\n\n  private shouldOpen = false;\n  private document: Document;\n\n  constructor(\n    @Host()\n    @Inject(forwardRef(() => AngularDropdownDirective))\n    public dropdown: AngularDropdownDirective,\n    private zone: NgZone,\n    @Inject(DOCUMENT) document: any\n  ) {\n    this.document = document;\n  }\n\n  ngOnInit(): void {\n    this.dropdown.onOpen\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => (this.shouldOpen = true));\n\n    this.dropdown.onClose\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.close());\n  }\n\n  set animationClass(className: string | null) {\n    if (this.dropdownElement !== null) {\n      if (this._animationClass && className !== this._animationClass) {\n        this.dropdownElement.classList.remove(this._animationClass);\n      } else if (className) {\n        this.dropdownElement.classList.add(className);\n      }\n    }\n    this._animationClass = className;\n  }\n\n  get animationClass(): string | null {\n    return this._animationClass;\n  }\n\n  get triggerElement(): Element | null {\n    return this.dropdown.triggerElement;\n  }\n\n  ngAfterViewChecked() {\n    if (this.shouldOpen) {\n      this.animationClass = this.transitioningInClass;\n      requestAnimationFrame(() => this.open());\n      this.shouldOpen = false;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.teardownEvents();\n  }\n\n  open(): void {\n    this.document.body.addEventListener(\n      'mousedown',\n      this.handleRootMouseDown,\n      true\n    );\n\n    if (this.isTouchDevice) {\n      this.document.body.addEventListener(\n        'touchstart',\n        this.touchStartHandler,\n        true\n      );\n      this.document.body.addEventListener(\n        'touchend',\n        this.handleRootMouseDown,\n        true\n      );\n    }\n\n    const changes = this.dropdown.reposition();\n    if (!this.dropdown.renderInPlace) {\n      this.addGlobalEvents();\n      this.startObservingDomMutations();\n    } else if (changes !== null && changes.vPosition === 'above') {\n      this.startObservingDomMutations();\n    }\n\n    requestAnimationFrame(() => this.animateIn());\n  }\n\n  close(): void {\n    this.teardownEvents();\n    this.animateOut();\n  }\n\n  private repositionInZone = () =>\n    this.zone.run(() => this.dropdown.reposition());\n\n  private animateIn(): void {\n    waitForAnimation(this.dropdownElement, () => {\n      this.animationClass = this.transitionedInClass;\n    });\n  }\n\n  private animateOut(): void {\n    if (this.dropdownElement === null) {\n      return;\n    }\n\n    const parentElement = this.dropdown.renderInPlace\n      ? this.dropdownElement.parentElement!.parentElement!\n      : this.dropdownElement.parentElement!;\n    const clone = this.dropdownElement.cloneNode(true) as HTMLElement;\n    clone.id = `${this.dropdownElement.id}--clone`;\n    clone.classList.remove(this.transitionedInClass);\n    clone.classList.remove(this.transitioningInClass);\n    clone.classList.add(this.transitioningOutClass);\n    parentElement.appendChild(clone);\n    this.animationClass = this.transitioningInClass;\n    waitForAnimation(clone, () => parentElement.removeChild(clone));\n  }\n\n  private handleRootMouseDown = (e: Event): void => {\n    const { target } = e as Event & { target: Element };\n\n    if (\n      this.hasMoved ||\n      (this.dropdownElement !== null &&\n        this.dropdownElement.contains(target)) ||\n      (this.triggerElement !== null && this.triggerElement.contains(target))\n    ) {\n      this.hasMoved = false;\n      return;\n    }\n\n    const closestDropdown = closest(target, 'ng-dropdown-content');\n    if (closestDropdown !== null) {\n      const trigger = this.document.querySelector(\n        `[aria-controls=${closestDropdown.getAttribute('id')}]`\n      );\n      const parentDropdown = closest(trigger!, 'ng-dropdown-content');\n      if (\n        parentDropdown !== null &&\n        parentDropdown.getAttribute('id') === this.dropdown.dropdownId\n      ) {\n        this.hasMoved = false;\n        return;\n      }\n    }\n\n    this.dropdown.close(true);\n  };\n\n  private startObservingDomMutations(): void {\n    if (MutationObserver !== undefined) {\n      this.mutationObserver = new MutationObserver((mutations: any) => {\n        if (\n          mutations[0].addedNodes.length ||\n          mutations[0].removedNodes.length\n        ) {\n          this.repositionInZone();\n        }\n      });\n      this.mutationObserver!.observe(this.dropdownElement!, {\n        childList: true,\n        subtree: true\n      });\n    } else {\n      this.dropdownElement!.addEventListener(\n        'DOMNodeInserted',\n        this.repositionInZone,\n        false\n      );\n      this.dropdownElement!.addEventListener(\n        'DOMNodeRemoved',\n        this.repositionInZone,\n        false\n      );\n    }\n  }\n\n  private stopObservingDomMutations(): void {\n    if (MutationObserver) {\n      if (this.mutationObserver) {\n        this.mutationObserver.disconnect();\n        this.mutationObserver = null;\n      }\n    } else {\n      if (this.dropdownElement !== null) {\n        this.dropdownElement.removeEventListener(\n          'DOMNodeInserted',\n          this.repositionInZone\n        );\n        this.dropdownElement.removeEventListener(\n          'DOMNodeRemoved',\n          this.repositionInZone\n        );\n      }\n    }\n  }\n\n  private addGlobalEvents(): void {\n    window.addEventListener('scroll', this.repositionInZone);\n    window.addEventListener('resize', this.repositionInZone);\n    window.addEventListener('orientationchange', this.repositionInZone);\n  }\n\n  private removeGlobalEvents(): void {\n    window.removeEventListener('scroll', this.repositionInZone);\n    window.removeEventListener('resize', this.repositionInZone);\n    window.removeEventListener('orientationchange', this.repositionInZone);\n  }\n\n  private touchStartHandler = (e: Event) => {\n    this.document.body.addEventListener(\n      'touchmove',\n      this.touchMoveHandler,\n      true\n    );\n  };\n\n  private touchMoveHandler = (e: Event) => {\n    this.hasMoved = true;\n    this.document.body.removeEventListener(\n      'touchmove',\n      this.touchMoveHandler,\n      true\n    );\n  };\n\n  private teardownEvents() {\n    this.removeGlobalEvents();\n    this.stopObservingDomMutations();\n    this.document.body.removeEventListener(\n      'mousedown',\n      this.handleRootMouseDown,\n      true\n    );\n\n    if (this.isTouchDevice) {\n      this.document.body.removeEventListener(\n        'touchstart',\n        this.touchStartHandler,\n        true\n      );\n      this.document.body.removeEventListener(\n        'touchend',\n        this.handleRootMouseDown,\n        true\n      );\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgWormholeModule } from 'ng-wormhole';\n\nimport { AngularDropdownDirective } from './angular-dropdown.directive';\nimport { AngularDropdownContentComponent } from './angular-dropdown-content.component';\nimport { AngularDropdownControlDirective } from './angular-dropdown-control.directive';\n\n@NgModule({\n  imports: [CommonModule, NgWormholeModule],\n  declarations: [\n    AngularDropdownDirective,\n    AngularDropdownControlDirective,\n    AngularDropdownContentComponent\n  ],\n  exports: [\n    AngularDropdownDirective,\n    AngularDropdownControlDirective,\n    AngularDropdownContentComponent\n  ]\n})\nexport class AngularDropdownModule {}\n"]}