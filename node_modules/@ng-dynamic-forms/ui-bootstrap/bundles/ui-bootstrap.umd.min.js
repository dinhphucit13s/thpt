/*!
@ng-dynamic-forms/ui-bootstrap 7.1.1 2019-03-14 19:20 UTC
Copyright (c) 2016-2018, Udo Sch√∂fer http://www.udos86.de

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@ng-dynamic-forms/core"),require("ngx-bootstrap/datepicker"),require("ngx-bootstrap/timepicker"),require("@angular/common"),require("angular2-text-mask")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/forms","@ng-dynamic-forms/core","ngx-bootstrap/datepicker","ngx-bootstrap/timepicker","@angular/common","angular2-text-mask"],t):t(((e=e||self).ngDF=e.ngDF||{},e.ngDF.bootstrapUI={}),e.ng.core,e.ng.forms,e.ngDF.core,e["ngx-bootstrap"].umd,e["ngx-bootstrap"].umd,e.ng.common,e["angular2-text-mask"])}(this,function(e,i,t,n,r,a,o,l){"use strict";var s,c,p,u,m,d,y,g,f,h,v,C=this&&this.__extends||(s=function(e,t){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}s(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),_=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new i.EventEmitter,n.change=new i.EventEmitter,n.focus=new i.EventEmitter,n}return C(e,o),e.decorators=[{type:i.Component,args:[{selector:"dynamic-bootstrap-checkbox",template:'<div [formGroup]="group" [class.disabled]="model.disabled" [ngClass]="getClass(\'element\', \'control\') || \'checkbox\'">\n\n    <label>\n\n        <input type="checkbox"\n               [checked]="model.checked"\n               [formControlName]="model.id"\n               [id]="elementId"\n               [indeterminate]="model.indeterminate"\n               [name]="model.name"\n               [ngClass]="getClass(\'element\', \'control\')"\n               [required]="model.required"\n               [tabindex]="model.tabIndex"\n               [value]="model.value"\n               (blur)="onBlur($event)"\n               (change)="onChange($event)"\n               (focus)="onFocus($event)"/><span [innerHTML]="model.label"\n                                                [ngClass]="[getClass(\'element\', \'label\'), getClass(\'grid\', \'label\')]"></span></label>\n</div>\n',changeDetection:i.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:i.Input}],layout:[{type:i.Input}],model:[{type:i.Input}],blur:[{type:i.Output}],change:[{type:i.Output}],focus:[{type:i.Output}]},e}(n.DynamicFormControlComponent),b=this&&this.__extends||(c=function(e,t){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}c(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),O=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new i.EventEmitter,n.change=new i.EventEmitter,n.customEvent=new i.EventEmitter,n.focus=new i.EventEmitter,n}return b(e,o),e.decorators=[{type:i.Component,args:[{selector:"dynamic-bootstrap-datepicker",template:'<div [formGroup]="group" class="input-group">\n\n    <input bsDatepicker class="form-control" #bsDatepicker="bsDatepicker"\n           [autofocus]="model.autoFocus"\n           [bsConfig]="model.getAdditional(\'bsConfig\', {containerClass: model.getAdditional(\'containerClass\', \'theme-green\'), showWeekNumbers: model.getAdditional(\'showWeekNumbers\', true)})"\n           [formControlName]="model.id"\n           [id]="elementId"\n           [maxDate]="model.max"\n           [minDate]="model.min"\n           [name]="model.name"\n           [ngClass]="getClass(\'element\', \'control\')"\n           [outsideClick]="model.getAdditional(\'outsideClick\', true)"\n           [placeholder]="model.placeholder"\n           [placement]="model.getAdditional(\'placement\', \'bottom\')"\n           [readonly]="model.readOnly"\n           [required]="model.required"\n           (bsValueChange)="onChange($event)"\n           (onHidden)="onCustomEvent($event, \'onHidden\')"\n           (onShown)="onCustomEvent($event, \'onShown\')">\n\n    <div *ngIf="model.toggleLabel" class="input-group-btn">\n\n        <button *ngIf="model.toggleIcon" class="btn" (click)="bsDatepicker.toggle()"><img [src]="model.toggleIcon"/></button>\n        <button *ngIf="model.toggleLabel" class="btn" (click)="bsDatepicker.toggle()">{{ model.toggleLabel }}</button>\n\n    </div>\n\n</div>\n',changeDetection:i.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:i.Input}],layout:[{type:i.Input}],model:[{type:i.Input}],blur:[{type:i.Output}],change:[{type:i.Output}],customEvent:[{type:i.Output}],focus:[{type:i.Output}],bsDatePicker:[{type:i.ViewChild,args:[r.BsDatepickerDirective]}]},e}(n.DynamicFormControlComponent),E=this&&this.__extends||(p=function(e,t){return(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}p(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),D=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new i.EventEmitter,n.change=new i.EventEmitter,n.customEvent=new i.EventEmitter,n.focus=new i.EventEmitter,n}return E(e,o),e.decorators=[{type:i.Component,args:[{selector:"dynamic-bootstrap-form-array",template:'<ng-container [formGroup]="group">\n\n    <div [formArrayName]="model.id" [id]="elementId" [ngClass]="getClass(\'element\', \'control\')">\n\n        <div *ngFor="let groupModel of model.groups; let idx = index" role="group"\n             [formGroupName]="idx" [ngClass]="[getClass(\'element\', \'group\'), getClass(\'grid\', \'group\')]">\n\n            <ng-container *ngTemplateOutlet="startTemplate?.templateRef; context: groupModel"></ng-container>\n\n            <dynamic-bootstrap-form-control *ngFor="let _model of groupModel.group"\n                                            [context]="groupModel"\n                                            [group]="array.at(idx)"\n                                            [hidden]="_model.hidden"\n                                            [layout]="layout"\n                                            [model]="_model"\n                                            [templates]="templates"\n                                            [ngClass]="[getClass(\'element\', \'host\', _model), getClass(\'grid\', \'host\', _model),\n                                                        getClass(\'element\',\'children\'), getClass(\'grid\',\'children\')]"\n                                            (blur)="onBlur($event)"\n                                            (change)="onChange($event)"\n                                            (focus)="onFocus($event)"\n                                            (bsEvent)="onCustomEvent($event, null, true)"></dynamic-bootstrap-form-control>\n\n            <ng-container *ngTemplateOutlet="endTemplate?.templateRef; context: groupModel"></ng-container>\n\n        </div>\n\n    </div>\n\n</ng-container>\n'}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:i.Input}],layout:[{type:i.Input}],model:[{type:i.Input}],templates:[{type:i.Input}],blur:[{type:i.Output}],change:[{type:i.Output}],customEvent:[{type:i.Output}],focus:[{type:i.Output}]},e}(n.DynamicFormArrayComponent),w=this&&this.__extends||(u=function(e,t){return(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}u(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),I=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new i.EventEmitter,n.change=new i.EventEmitter,n.customEvent=new i.EventEmitter,n.focus=new i.EventEmitter,n}return w(e,o),e.decorators=[{type:i.Component,args:[{selector:"dynamic-bootstrap-form-group",template:'<ng-container [formGroup]="group">\n\n    <fieldset [formGroupName]="model.id"\n              [id]="elementId"\n              [name]="model.name"\n              [ngClass]="getClass(\'element\', \'control\')">\n\n        <legend *ngIf="model.legend" [innerHTML]="model.legend"></legend>\n\n        <dynamic-bootstrap-form-control *ngFor="let _model of model.group"\n                                        [asBootstrapFormGroup]="false"\n                                        [group]="control"\n                                        [hidden]="_model.hidden"\n                                        [layout]="layout"\n                                        [model]="_model"\n                                        [templates]="templates"\n                                        [ngClass]="[getClass(\'element\', \'host\', _model), getClass(\'grid\', \'host\', _model),\n                                                    getClass(\'element\',\'children\'), getClass(\'grid\',\'children\')]"\n                                        (blur)="onBlur($event)"\n                                        (change)="onChange($event)"\n                                        (focus)="onFocus($event)"\n                                        (bsEvent)="onCustomEvent($event, null, true)"></dynamic-bootstrap-form-control>\n    </fieldset>\n\n</ng-container>\n'}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:i.Input}],layout:[{type:i.Input}],model:[{type:i.Input}],templates:[{type:i.Input}],blur:[{type:i.Output}],change:[{type:i.Output}],customEvent:[{type:i.Output}],focus:[{type:i.Output}]},e}(n.DynamicFormControlComponent),x=this&&this.__extends||(m=function(e,t){return(m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}m(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),F=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new i.EventEmitter,n.change=new i.EventEmitter,n.focus=new i.EventEmitter,n}return x(e,o),e.decorators=[{type:i.Component,args:[{selector:"dynamic-bootstrap-input",template:'<div [formGroup]="group" [class.input-group]="model.prefix || model.suffix">\n\n    <div *ngIf="model.prefix" class="input-group-addon" [innerHTML]="model.prefix"></div>\n\n    <input class="form-control"\n           [attr.accept]="model.accept"\n           [attr.max]="model.max"\n           [attr.min]="model.min"\n           [attr.multiple]="model.multiple"\n           [attr.step]="model.step"\n           [autocomplete]="model.autoComplete"\n           [autofocus]="model.autoFocus"\n           [dynamicList]="model.listId"\n           [formControlName]="model.id"\n           [id]="elementId"\n           [maxlength]="model.maxLength"\n           [minlength]="model.minLength"\n           [name]="model.name"\n           [ngClass]="getClass(\'element\', \'control\')"\n           [pattern]="model.pattern"\n           [placeholder]="model.placeholder"\n           [readonly]="model.readOnly"\n           [required]="model.required"\n           [spellcheck]="model.spellCheck"\n           [tabindex]="model.tabIndex"\n           [textMask]="{mask: (model.mask || false), showMask: model.mask && !(model.placeholder)}"\n           [type]="model.inputType"\n           (blur)="onBlur($event)"\n           (change)="onChange($event)"\n           (focus)="onFocus($event)"/>\n\n    <div *ngIf="model.suffix" class="input-group-addon" [innerHTML]="model.suffix"></div>\n\n    <datalist *ngIf="model.hasList" [id]="model.listId">\n\n        <option *ngFor="let option of model.list$ | async" [value]="option">\n\n    </datalist>\n\n</div>\n',changeDetection:i.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:i.Input}],layout:[{type:i.Input}],model:[{type:i.Input}],blur:[{type:i.Output}],change:[{type:i.Output}],focus:[{type:i.Output}]},e}(n.DynamicFormControlComponent),S=this&&this.__extends||(d=function(e,t){return(d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}d(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),P=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new i.EventEmitter,n.change=new i.EventEmitter,n.focus=new i.EventEmitter,n}return S(e,o),e.decorators=[{type:i.Component,args:[{selector:"dynamic-bootstrap-radio-group",template:'<fieldset role="radiogroup"\n          [formGroup]="group"\n          [id]="elementId"\n          [name]="model.name"\n          [ngClass]="getClass(\'element\', \'control\')"\n          [tabindex]="model.tabIndex"\n          (change)="onChange($event)">\n\n    <legend *ngIf="model.legend" [innerHTML]="model.legend"></legend>\n\n    <div *ngFor="let option of model.options$ | async" [ngClass]="getClass(\'element\', \'option\') || \'radio\'">\n\n        <label><input type="radio"\n                      [formControlName]="model.id"\n                      [name]="model.name"\n                      [value]="option.value"\n                      (blur)="onBlur($event)"\n                      (focus)="onFocus($event)"/><span [innerHTML]="option.label"></span></label>\n    </div>\n\n</fieldset>\n',changeDetection:i.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:i.Input}],layout:[{type:i.Input}],model:[{type:i.Input}],blur:[{type:i.Output}],change:[{type:i.Output}],focus:[{type:i.Output}]},e}(n.DynamicFormControlComponent),T=this&&this.__extends||(y=function(e,t){return(y=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}y(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),k=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new i.EventEmitter,n.change=new i.EventEmitter,n.focus=new i.EventEmitter,n}return T(e,o),e.decorators=[{type:i.Component,args:[{selector:"dynamic-bootstrap-rating",template:'<ng-container [formGroup]="group">\n\n    <rating [formControlName]="model.id"\n            [id]="elementId"\n            [max]="model.max"\n            [ngClass]="getClass(\'element\', \'control\')"\n            [readonly]="model.getAdditional(\'readonly\', false)"\n            (onHover)="onCustomEvent($event, \'onHover\')"\n            (onLeave)="onCustomEvent($event, \'onLeave\')"></rating>\n\n</ng-container>\n',changeDetection:i.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:i.Input}],layout:[{type:i.Input}],model:[{type:i.Input}],blur:[{type:i.Output}],change:[{type:i.Output}],focus:[{type:i.Output}]},e}(n.DynamicFormControlComponent),M=this&&this.__extends||(g=function(e,t){return(g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}g(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),L=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new i.EventEmitter,n.change=new i.EventEmitter,n.focus=new i.EventEmitter,n}return M(e,o),e.decorators=[{type:i.Component,args:[{selector:"dynamic-bootstrap-select",template:'<ng-container [formGroup]="group">\n\n    <select class="form-control"\n            [compareWith]="model.compareWithFn"\n            [formControlName]="model.id"\n            [id]="elementId"\n            [name]="model.name"\n            [ngClass]="getClass(\'element\', \'control\')"\n            [required]="model.required"\n            [tabindex]="model.tabIndex"\n            (blur)="onBlur($event)"\n            (change)="onChange($event)"\n            (focus)="onFocus($event)">\n\n        <option *ngFor="let option of model.options$ | async"\n                [disabled]="option.disabled"\n                [ngValue]="option.value">{{ option.label }}\n        </option>\n\n    </select>\n\n</ng-container>\n',changeDetection:i.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:i.Input}],layout:[{type:i.Input}],model:[{type:i.Input}],blur:[{type:i.Output}],change:[{type:i.Output}],focus:[{type:i.Output}]},e}(n.DynamicFormControlComponent),A=this&&this.__extends||(f=function(e,t){return(f=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}f(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),R=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new i.EventEmitter,n.change=new i.EventEmitter,n.focus=new i.EventEmitter,n}return A(e,o),e.decorators=[{type:i.Component,args:[{selector:"dynamic-bootstrap-textarea",template:'<ng-container [formGroup]="group">\n\n    <textarea class="form-control"\n              [cols]="model.cols"\n              [formControlName]="elementId"\n              [id]="elementId"\n              [maxlength]="model.maxLength"\n              [minlength]="model.minLength"\n              [name]="model.name"\n              [ngClass]="getClass(\'element\', \'control\')"\n              [placeholder]="model.placeholder"\n              [readonly]="model.readOnly"\n              [required]="model.required"\n              [rows]="model.rows"\n              [spellcheck]="model.spellCheck"\n              [tabindex]="model.tabIndex"\n              [wrap]="model.wrap"\n              (blur)="onBlur($event)"\n              (change)="onChange($event)"\n              (focus)="onFocus($event)"></textarea>\n\n</ng-container>\n',changeDetection:i.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:i.Input}],layout:[{type:i.Input}],model:[{type:i.Input}],blur:[{type:i.Output}],change:[{type:i.Output}],focus:[{type:i.Output}]},e}(n.DynamicFormControlComponent),N=this&&this.__extends||(h=function(e,t){return(h=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}h(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),$=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.blur=new i.EventEmitter,n.change=new i.EventEmitter,n.focus=new i.EventEmitter,n}return N(e,o),e.decorators=[{type:i.Component,args:[{selector:"dynamic-bootstrap-timepicker",template:'<ng-container [formGroup]="group">\n\n    <timepicker [arrowkeys]="model.getAdditional(\'arrowkeys\', true)"\n                [formControlName]="model.id"\n                [hourStep]="model.getAdditional(\'hourStep\', 1)"\n                [id]="elementId"\n                [max]="model.max"\n                [min]="model.min"\n                [mousewheel]="model.getAdditional(\'mousewheel\', true)"\n                [minuteStep]="model.getAdditional(\'minuteStep\', 1)"\n                [ngClass]="getClass(\'element\', \'control\')"\n                [secondsStep]="model.getAdditional(\'secondsStep\', 1)"\n                [showMeridian]="model.meridian"\n                [showSeconds]="model.showSeconds"\n                [showSpinners]="model.getAdditional(\'spinners\', true)"></timepicker>\n\n</ng-container>\n',changeDetection:i.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={group:[{type:i.Input}],layout:[{type:i.Input}],model:[{type:i.Input}],blur:[{type:i.Output}],change:[{type:i.Output}],focus:[{type:i.Output}],bsTimePicker:[{type:i.ViewChild,args:[a.TimepickerComponent]}]},e}(n.DynamicFormControlComponent),B=this&&this.__extends||(v=function(e,t){return(v=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}v(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),j=function(a){function e(e,t,n,o){var r=a.call(this,e,t,n,o)||this;return r.componentFactoryResolver=e,r.layoutService=t,r.validationService=n,r.dynamicFormInstancesService=o,r.asBootstrapFormGroup=!0,r.context=null,r.blur=new i.EventEmitter,r.change=new i.EventEmitter,r.focus=new i.EventEmitter,r.customEvent=new i.EventEmitter,r}return B(e,a),Object.defineProperty(e.prototype,"componentType",{get:function(){return this.layoutService.getCustomComponentType(this.model)||V(this.model)},enumerable:!0,configurable:!0}),e.decorators=[{type:i.Component,args:[{selector:"dynamic-bootstrap-form-control",template:'<div [class.form-group]="asBootstrapFormGroup || getClass(\'element\', \'container\').includes(\'form-group\')"\n     [class.has-error]="showErrorMessages"\n     [formGroup]="group"\n     [ngClass]="[getClass(\'element\', \'container\'), getClass(\'grid\', \'container\')]">\n\n    <label *ngIf="!isCheckbox && hasLabel"\n           [for]="elementId"\n           [innerHTML]="model.label"\n           [ngClass]="[getClass(\'element\', \'label\'), getClass(\'grid\', \'label\')]"></label>\n\n    <ng-container *ngTemplateOutlet="startTemplate?.templateRef; context: model"></ng-container>\n\n    <div [ngClass]="getClass(\'grid\', \'control\')">\n\n        <ng-container #componentViewContainer></ng-container>\n\n        <span *ngIf="hasHint" class="help-block" [innerHTML]="hint"\n              [ngClass]="getClass(\'element\', \'hint\')"></span>\n\n    </div>\n\n    <ul *ngIf="showErrorMessages" class="has-error"\n        [ngClass]="[getClass(\'element\', \'errors\'), getClass(\'grid\', \'errors\')]">\n\n        <li *ngFor="let message of errorMessages" class="help-block">{{ message }}</li>\n\n    </ul>\n\n    <ng-container *ngTemplateOutlet="endTemplate?.templateRef; context: model"></ng-container>\n\n    <ng-content></ng-content>\n\n</div>\n'}]}],e.ctorParameters=function(){return[{type:i.ComponentFactoryResolver},{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService},{type:n.DynamicFormInstancesService}]},e.propDecorators={contentTemplateList:[{type:i.ContentChildren,args:[n.DynamicTemplateDirective]}],inputTemplateList:[{type:i.Input,args:["templates"]}],asBootstrapFormGroup:[{type:i.Input}],context:[{type:i.Input}],group:[{type:i.Input}],layout:[{type:i.Input}],model:[{type:i.Input}],blur:[{type:i.Output}],change:[{type:i.Output}],focus:[{type:i.Output}],customEvent:[{type:i.Output,args:["bsEvent"]}],componentViewContainerRef:[{type:i.ViewChild,args:["componentViewContainer",{read:i.ViewContainerRef}]}]},e}(n.DynamicFormControlContainerComponent);function V(e){switch(e.type){case n.DYNAMIC_FORM_CONTROL_TYPE_ARRAY:return D;case n.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:return _;case n.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:return I;case n.DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:return O;case n.DYNAMIC_FORM_CONTROL_TYPE_GROUP:return I;case n.DYNAMIC_FORM_CONTROL_TYPE_INPUT:return F;case n.DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:return P;case n.DYNAMIC_FORM_CONTROL_TYPE_RATING:return k;case n.DYNAMIC_FORM_CONTROL_TYPE_SELECT:return L;case n.DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:return R;case n.DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:return $;default:return null}}var G,Y=this&&this.__extends||(G=function(e,t){return(G=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}G(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),H=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.formService=e,n.layoutService=t,n.blur=new i.EventEmitter,n.change=new i.EventEmitter,n.focus=new i.EventEmitter,n.customEvent=new i.EventEmitter,n}return Y(e,o),e.decorators=[{type:i.Component,args:[{selector:"dynamic-bootstrap-form",template:'<dynamic-bootstrap-form-control *ngFor="let model of formModel; trackBy: trackByFn"\n                                [group]="formGroup"\n                                [hidden]="model.hidden"\n                                [layout]="formLayout"\n                                [model]="model"\n                                [ngClass]="[getClass(model,\'element\',\'host\'), getClass(model,\'grid\',\'host\')]"\n                                [templates]="templates"\n                                (blur)="onEvent($event, \'blur\')"\n                                (change)="onEvent($event, \'change\')"\n                                (focus)="onEvent($event, \'focus\')"\n                                (bsEvent)="onEvent($event, \'custom\')"></dynamic-bootstrap-form-control>'}]}],e.ctorParameters=function(){return[{type:n.DynamicFormService},{type:n.DynamicFormLayoutService}]},e.propDecorators={formGroup:[{type:i.Input,args:["group"]}],formModel:[{type:i.Input,args:["model"]}],formLayout:[{type:i.Input,args:["layout"]}],blur:[{type:i.Output}],change:[{type:i.Output}],focus:[{type:i.Output}],customEvent:[{type:i.Output,args:["bsEvent"]}],templates:[{type:i.ContentChildren,args:[n.DynamicTemplateDirective]}],components:[{type:i.ViewChildren,args:[j]}]},e}(n.DynamicFormComponent),q={provide:t.NG_VALUE_ACCESSOR,useExisting:i.forwardRef(function(){return U}),multi:!0},U=function(){function e(e){this.changeDetection=e,this.max=5,this.onHover=new i.EventEmitter,this.onLeave=new i.EventEmitter,this.onChange=Function.prototype,this.onTouched=Function.prototype}return e.prototype.onKeydown=function(e){if(-1!==[37,38,39,40].indexOf(e.which)){e.preventDefault(),e.stopPropagation();var t=38===e.which||39===e.which?1:-1;this.rate(this.value+t)}},e.prototype.ngOnInit=function(){this.max=void 0!==this.max?this.max:5,this.titles=void 0!==this.titles&&0<this.titles.length?this.titles:[],this.range=this.buildTemplateObjects(this.max)},e.prototype.writeValue=function(e){if(e%1!==e)return this.value=Math.round(e),this.preValue=e,void this.changeDetection.markForCheck();this.preValue=e,this.value=e,this.changeDetection.markForCheck()},e.prototype.enter=function(e){this.readonly||(this.value=e,this.changeDetection.markForCheck(),this.onHover.emit(e))},e.prototype.reset=function(){this.value=this.preValue,this.changeDetection.markForCheck(),this.onLeave.emit(this.value)},e.prototype.registerOnChange=function(e){this.onChange=e},e.prototype.registerOnTouched=function(e){this.onTouched=e},e.prototype.rate=function(e){!this.readonly&&0<=e&&e<=this.range.length&&(this.writeValue(e),this.onChange(e))},e.prototype.buildTemplateObjects=function(e){for(var t=[],n=0;n<e;n++)t.push({index:n,title:this.titles[n]||n+1});return t},e.decorators=[{type:i.Component,args:[{selector:"rating",template:'<span (mouseleave)="reset()" (keydown)="onKeydown($event)" tabindex="0"\n      role="slider" aria-valuemin="0" [attr.aria-valuemax]="range.length"\n      [attr.aria-valuenow]="value">\n  <ng-template #star let-value="value" let-index="index">{{ index < value ? \'&#9733;\' : \'&#9734;\' }}</ng-template>\n  <ng-template ngFor let-r [ngForOf]="range" let-index="index">\n    <span class="sr-only">({{ index < value ? \'*\' : \' \' }})</span>\n    <span class="bs-rating-star"\n          (mouseenter)="enter(index + 1)"\n          (click)="rate(index + 1)"\n          [title]="r.title"\n          [style.cursor]="readonly ? \'default\' : \'pointer\'"\n          [class.active]="index < value">\n      <ng-template [ngTemplateOutlet]="customTemplate || star"\n                   [ngTemplateOutletContext]="{index: index, value: value}">\n      </ng-template>\n    </span>\n  </ng-template>\n</span>\n',providers:[q],changeDetection:i.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:i.ChangeDetectorRef}]},e.propDecorators={max:[{type:i.Input}],readonly:[{type:i.Input}],titles:[{type:i.Input}],customTemplate:[{type:i.Input}],onHover:[{type:i.Output}],onLeave:[{type:i.Output}],onKeydown:[{type:i.HostListener,args:["keydown",["$event"]]}]},e}(),K=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[]}},e.decorators=[{type:i.NgModule,args:[{imports:[o.CommonModule],declarations:[U],exports:[U]}]}],e}(),W=function(){function e(){}return e.decorators=[{type:i.NgModule,args:[{imports:[o.CommonModule,t.ReactiveFormsModule,r.BsDatepickerModule,K,a.TimepickerModule,l.TextMaskModule,n.DynamicFormsCoreModule],declarations:[_,O,D,H,j,I,F,P,k,L,R,$],entryComponents:[_,O,D,I,F,P,k,L,R,$],exports:[n.DynamicFormsCoreModule,_,O,D,H,j,I,F,P,k,L,R,$]}]}],e}();e.DynamicBootstrapCheckboxComponent=_,e.DynamicBootstrapDatePickerComponent=O,e.DynamicBootstrapFormArrayComponent=D,e.DynamicBootstrapFormGroupComponent=I,e.DynamicBootstrapInputComponent=F,e.DynamicBootstrapRadioGroupComponent=P,e.DynamicBootstrapRatingComponent=k,e.DynamicBootstrapSelectComponent=L,e.DynamicBootstrapTextAreaComponent=R,e.DynamicBootstrapTimePickerComponent=$,e.DynamicBootstrapFormComponent=H,e.bootstrapUIFormControlMapFn=V,e.DynamicBootstrapFormControlContainerComponent=j,e.DynamicFormsBootstrapUIModule=W,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ui-bootstrap.umd.min.js.map
