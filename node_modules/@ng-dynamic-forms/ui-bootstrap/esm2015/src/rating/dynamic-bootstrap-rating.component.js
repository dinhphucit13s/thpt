/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { DynamicFormLayoutService, DynamicFormValidationService, DynamicFormControlComponent, DynamicRatingModel } from "@ng-dynamic-forms/core";
export class DynamicBootstrapRatingComponent extends DynamicFormControlComponent {
    /**
     * @param {?} layoutService
     * @param {?} validationService
     */
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.focus = new EventEmitter();
    }
}
DynamicBootstrapRatingComponent.decorators = [
    { type: Component, args: [{
                selector: "dynamic-bootstrap-rating",
                template: "<ng-container [formGroup]=\"group\">\n\n    <rating [formControlName]=\"model.id\"\n            [id]=\"elementId\"\n            [max]=\"model.max\"\n            [ngClass]=\"getClass('element', 'control')\"\n            [readonly]=\"model.getAdditional('readonly', false)\"\n            (onHover)=\"onCustomEvent($event, 'onHover')\"\n            (onLeave)=\"onCustomEvent($event, 'onLeave')\"></rating>\n\n</ng-container>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
/** @nocollapse */
DynamicBootstrapRatingComponent.ctorParameters = () => [
    { type: DynamicFormLayoutService },
    { type: DynamicFormValidationService }
];
DynamicBootstrapRatingComponent.propDecorators = {
    group: [{ type: Input }],
    layout: [{ type: Input }],
    model: [{ type: Input }],
    blur: [{ type: Output }],
    change: [{ type: Output }],
    focus: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    DynamicBootstrapRatingComponent.prototype.group;
    /** @type {?} */
    DynamicBootstrapRatingComponent.prototype.layout;
    /** @type {?} */
    DynamicBootstrapRatingComponent.prototype.model;
    /** @type {?} */
    DynamicBootstrapRatingComponent.prototype.blur;
    /** @type {?} */
    DynamicBootstrapRatingComponent.prototype.change;
    /** @type {?} */
    DynamicBootstrapRatingComponent.prototype.focus;
    /**
     * @type {?}
     * @protected
     */
    DynamicBootstrapRatingComponent.prototype.layoutService;
    /**
     * @type {?}
     * @protected
     */
    DynamicBootstrapRatingComponent.prototype.validationService;
}
//# sourceMappingURL=dynamic-bootstrap-rating.component.js.map