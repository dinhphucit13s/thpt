import {FieldConfig} from '../dynamic-forms/field.interface';
import {Validator} from '../dynamic-forms/field.interface';
import * as moment from 'moment';
import {validate} from 'codelyzer/walkerFactory/walkerFn';
import {Validators} from '@angular/forms';

export class AppConstants {
    public static get FormatDateTime(): FieldConfig[] {
        return [
            {
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY HH:mm:ss') : '';
                },
            }
        ];
    }

    public static get FormatDate(): FieldConfig[] {
        return [
            {
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY') : '';
                },
            }
        ];
    }

    public static get BackgroundColor(): FieldConfig[] {
        return [
            {
                cellStyle: (params) => {
                    return {color: params.colDef.color, backgroundColor: params.colDef.backgroundColor};
                },
            }
        ];
    }

    public static get TextColor(): FieldConfig[] {
        return [
            {
                cellStyle: (params) => {
                    if (params.value === 'DONE') {
                        return {color: '#08c'};
                    } else if (params.value === 'CLOSED') {
                        return {color: '#00cc5b'};
                    }
                },
            }
        ];
    }

    public static get ellipsisFileName(): FieldConfig[] {
        return [
            {
                cellRenderer: (data) => {
                    if (data.value) {
                        let result = data.value;
                        const index = result.indexOf('___');
                        if (index >= 0) {
                            result = result.substring(0, index) + '...';
                        }
                        return `<div class="hover" title="` + data.value.replace(new RegExp('___', 'g'), '&#13;') + `">` + result + `</div>`;
                    }
                },
            }
        ];
    }

    public static get validatorPattern(): Validator[] {
        return [
            {
                validator: (params) => {
                    return Validators.pattern('^[a-zA-Z]+$');
                }
            }
        ];
    }

    public static get PurchaseOrderItems(): FieldConfig[] {
        return [
            {
                position: 'order',
                type: 'input',
                inputType: 'text',
                value: null,
                headerName: 'Purchase Order Name',
                field: 'name',
                width: 180,
                cellRenderer: null,
                colId: 'name',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                cellStyle: null,
                rowDrag: true,
                validations: null,
                rowStyle: {background: 'yellow'},
                properties: {
                    isActiveOnPM: true,
                    isActiveOnOP: true,
                    isRequiredOnPM: true,
                    isRequiredOnOP: true,
                    isRequiredField: true
                },
            },
            {
                position: 'order',
                type: 'input',
                inputType: 'text',
                value: null,
                headerName: 'Project Name',
                field: 'projectName',
                hideDynamicField: true,
                width: 150,
                cellRenderer: null,
                colId: 'projectName',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                properties: {
                    isActiveOnPM: true,
                    isActiveOnOP: true,
                    isRequiredOnPM: true,
                    isRequiredOnOP: true,
                    isRequiredField: true
                },
            },
            {
                position: 'order',
                headerName: 'Team Lead',
                type: 'select',
                field: 'purchaseOrderLeadUserLogin',
                width: 200,
                cellRenderer: null,
                colId: 'purchaseOrderLeadUserLogin',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                hide: true,
                options: null,
                urlOption: 'api/project-users-by-role-select',
                paramOptions: null,
                properties: {
                    isActiveOnPM: true,
                    isActiveOnOP: true,
                    isRequiredOnPM: true,
                    isRequiredOnOP: true,
                    isRequiredField: true
                },
            },
            {
                position: 'order',
                headerName: 'Status',
                type: 'select',
                field: 'status',
                width: 150,
                cellRenderer: null,
                colId: 'status',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                options: ['OPEN', 'PROCESSING', 'DELIVERED', 'CANCEL'],
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false
                },
            },
            {
                position: 'order',
                headerName: 'StartTime',
                field: 'startTime',
                type: 'date',
                value: null,
                width: 200,
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY HH:mm:ss') : '';
                },
                colId: 'startTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                hide: false,
                validations: null,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false
                },
            },
            {
                position: 'order',
                headerName: 'EndTime',
                field: 'endTime',
                type: 'date',
                value: null,
                width: 200,
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY HH:mm:ss') : '';
                },
                colId: 'endTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                hide: false,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false
                },
            },
            {
                position: 'order',
                headerName: 'Descriptions',
                field: 'description',
                type: 'textarea',
                value: null,
                width: 150,
                cellRenderer: null,
                colId: 'descriptions',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false
                },
            },
            {
                headerName: 'Actions',
                field: 'id',
                width: 180,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        edit: 'purchase-orders/',
                        view: '../purchase-orders',
                        delete: 'purchase-orders/',
                        'project_export': 'api/purchase-orders/export?purchaseOrderId=',
                    }
                },
                editable: false,
                properties: {
                    isActiveOnPM: true,
                    isActiveOnOP: true,
                    isRequiredOnPM: true,
                    isRequiredOnOP: true,
                    isRequiredField: true,
                    isActivityField: false,
                },
            },
        ];
    }

    public static get PackageItems(): FieldConfig[] {
        return [
            {
                headerName: 'Actions',
                field: 'id',
                width: 280,
                cellRenderer: 'actionsButton',
                pinned: 'left',
                cellRendererParams: {
                    routers: {
                        edit: 'packages/',
                        view: '../../packages',
                        delivery: 'packages/',
                        delete: 'packages/'
                    }
                },
                editable: false,
                properties: {
                    isActiveOnPM: true,
                    isActiveOnOP: true,
                    isRequiredOnPM: true,
                    isRequiredOnOP: true,
                    isRequiredField: false
                }
            },
            {
                position: 'Package',
                type: 'input',
                inputType: 'text',
                value: null,
                headerName: 'Package Name',
                field: 'name',
                width: 150,
                cellRenderer: null,
                colId: 'name',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                properties: {
                    isActiveOnPM: true,
                    isActiveOnOP: true,
                    isRequiredOnPM: true,
                    isRequiredOnOP: true,
                    isRequiredField: false
                }
            },
            {
                position: 'Package',
                type: 'input',
                inputType: 'text',
                value: null,
                headerName: 'OP',
                field: 'op',
                hideDynamicField: true,
                width: 110,
                cellRenderer: null,
                colId: 'op',
                editable: false,
                // filter: 'agNumberColumnFilter',
                sortable: true,
                sort: 'asc',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false
                },
            },
            {
                position: 'Package',
                type: 'input',
                inputType: 'text',
                value: null,
                headerName: 'Reviewer',
                field: 'reviewer',
                hideDynamicField: true,
                width: 110,
                cellRenderer: null,
                colId: 'reviewer',
                editable: false,
                // filter: 'agNumberColumnFilter',
                sortable: true,
                sort: 'asc',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false
                },
            },
            {
                position: 'Package',
                type: 'input',
                inputType: 'text',
                value: null,
                headerName: 'FI',
                field: 'fi',
                hideDynamicField: true,
                width: 110,
                cellRenderer: null,
                colId: 'fi',
                editable: false,
                // filter: 'agNumberColumnFilter',
                sortable: true,
                sort: 'asc',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false
                },
            },
            {
                position: 'Package',
                type: 'input',
                inputType: 'text',
                value: null,
                headerName: 'Delivery',
                field: 'delivery',
                hideDynamicField: true,
                width: 110,
                cellRenderer: null,
                colId: 'delivery',
                editable: false,
                // filter: 'agNumberColumnFilter',
                sortable: true,
                sort: 'asc',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false
                },
            },
            {
                position: 'Package',
                type: 'input',
                inputType: 'number',
                value: null,
                headerName: 'Target',
                field: 'target',
                width: 110,
                cellRenderer: null,
                colId: 'target',
                editable: false,
                // filter: 'agNumberColumnFilter',
                sortable: true,
                hide: false,
                sort: 'asc',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false
                }
            },
            {
                position: 'Package',
                type: 'date',
                value: null,
                headerName: 'EstimateDelivery',
                field: 'estimateDelivery',
                width: 175,
                cellRenderer: null,
                format: 'datetime',
                colId: 'estimateDelivery',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false
                }
            },
            {
                position: 'Package',
                type: 'date',
                value: null,
                headerName: 'Start Time',
                field: 'startTime',
                width: 170,
                cellRenderer: null,
                format: 'datetime',
                colId: 'startTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                hide: false,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false
                }
            },
            {
                position: 'Package',
                type: 'date',
                value: null,
                headerName: 'End Time',
                field: 'endTime',
                width: 170,
                cellRenderer: null,
                format: 'datetime',
                colId: 'endTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                hide: false,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false
                }
            },
            {
                position: 'Package',
                type: 'textarea',
                value: null,
                headerName: 'Description',
                field: 'description',
                width: 175,
                cellRenderer: null,
                colId: 'description',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                hide: false,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false
                }
            },
        ];
    }

    public static get TaskItems(): FieldConfig[] {
        return [

            {
                headerName: 'Actions',
                field: 'id',
                width: 350,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        edit: 'tasks/',
                        clone: 'derived/tasks/',
                        view: '../../tasks',
                        delete: 'tasks/'
                    }
                },
                editable: false,
                pinned: 'left',
                properties: {
                    isActiveOnPM: true,
                    isActiveOnOP: true,
                    isRequiredOnPM: true,
                    isRequiredOnOP: true,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                type: 'input',
                inputType: 'text',
                headerName: 'Task Name',
                field: 'name',
                width: 180,
                cellRenderer: null,
                colId: 'name',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 0,
                sortByPosition: 0,
                properties: {
                    isActiveOnPM: true,
                    isActiveOnOP: true,
                    isRequiredOnPM: true,
                    isRequiredOnOP: true,
                    isRequiredField: false,
                }
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'Package',
                field: 'packagesName',
                width: 150,
                cellRenderer: null,
                colId: 'packagesName',
                hideDynamicField: true,
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 0,
                sortByPosition: 1,
                value: null,
                options: null,
                urlOption: '',
                hide: false,
                properties:
                    {
                        isActiveOnPM: false,
                        isActiveOnOP: false,
                        isRequiredOnPM: false,
                        isRequiredOnOP: false,
                        isRequiredField: false
                    }
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'Severity',
                field: 'severity',
                width: 150,
                cellRenderer: null,
                colId: 'severity',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 1,
                sortByPosition: 0,
                value: null,
                options: ['NORMAL', 'MEDIUM', 'HIGH'],
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,

                },
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'Priority',
                field: 'priority',
                width: 150,
                cellRenderer: null,
                colId: 'priority',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 1,
                sortByPosition: 1,
                value: null,
                options: ['NORMAL', 'MEDIUM', 'HIGH'],
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                type: 'input',
                inputType: 'text',
                headerName: 'Physical File',
                field: 'fileName',
                width: 150,
                cellRenderer: (data) => {
                    console.log(data);
                    if (data.value) {
                        let result = data.value.length > 50 ? data.value.substring(0, 50) + '...' : data.value;
                        const index = result.indexOf('$$');
                        if (index >= 0) {
                            result = result.substring(0, index) + '...';
                        }
                        return `<div title="` + data.value + `">` + result + `</div>`;
                    }
                },
                colId: 'fileName',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 1,
                sortByPosition: 2,
                hide: false,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                type: 'input',
                inputType: 'text',
                headerName: 'Type',
                field: 'type',
                width: 100,
                cellRenderer: null,
                colId: 'type',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 0,
                sortByPosition: 3,
                hide: false,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'Availability',
                field: 'availability',
                width: 150,
                cellRenderer: null,
                colId: 'availability',
                editable: false,
                hide: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 1,
                sortByPosition: 3,
                value: 'NA',
                options: ['NA', 'OK', 'NO_OBJECT', 'NO_SCOPE', 'REWORK'],
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                type: 'input',
                inputType: 'number',
                headerName: 'Frame',
                field: 'frame',
                width: 150,
                cellRenderer: null,
                colId: 'frame',
                editable: false,
                hide: false,
                // filter: 'agNumberColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 1,
                sortByPosition: 4,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                type: 'input',
                inputType: 'number',
                headerName: 'Actual Object',
                field: 'actualObject',
                width: 150,
                cellRenderer: null,
                colId: 'actualObject',
                cellEditor: 'numericEditor',
                editable: true,
                // filter: 'agNumberColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 1,
                sortByPosition: 5,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                type: 'date',
                headerName: 'Estimated Start Time',
                field: 'estimateStartTime',
                width: 185,
                cellRenderer: null,
                format: 'datetime',
                colId: 'estimateStartTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 0,
                sortByPosition: 5,
                hide: false,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                type: 'date',
                headerName: 'Estimated End Time',
                field: 'estimateEndTime',
                width: 185,
                cellRenderer: null,
                format: 'datetime',
                colId: 'estimateEndTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 0,
                sortByPosition: 6,
                hide: false,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'Status',
                field: 'status',
                width: 150,
                cellRenderer: null,
                colId: 'status',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                hide: false,
                sort: 'asc',
                displayPosition: 0,
                sortByPosition: 4,
                value: 'NA',
                options: ['NA', 'OPEN', 'DOING', 'DONE', 'CANCEL', 'PENDING', 'CLOSED'],
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'OP',
                field: 'op',
                width: 150,
                cellRenderer: null,
                colId: 'op',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 2,
                sortByPosition: 0,
                value: null,
                hide: false,
                options: null,
                urlOption: 'api/project-users-selects',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'OP Status',
                field: 'opStatus',
                width: 180,
                cellRenderer: null,
                colId: 'opStatus',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 2,
                sortByPosition: 1,
                value: 'NA',
                hide: false,
                options: ['NA', 'OPEN', 'DOING', 'PENDING', 'DONE', 'CANCEL', 'REOPEN'],
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'date',
                headerName: 'OP Start Time',
                field: 'opStartTime',
                width: 175,
                cellRenderer: null,
                format: 'datetime',
                colId: 'opStartTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 2,
                sortByPosition: 2,
                hide: true,
                // hideDynamicField: true,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'date',
                headerName: 'OP End Time',
                field: 'opEndTime',
                width: 175,
                cellRenderer: null,
                format: 'datetime',
                colId: 'opEndTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 2,
                sortByPosition: 3,
                hide: true,
                // hideDynamicField: true,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'Reviewer 1',
                field: 'review1',
                width: 170,
                cellRenderer: null,
                colId: 'review1',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 2,
                sortByPosition: 4,
                value: null,
                options: null,
                hide: false,
                urlOption: null,
                reuseData: 'op',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'Review 1 Status',
                field: 'review1Status',
                width: 180,
                cellRenderer: null,
                colId: 'review1Status',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                hide: false,
                sort: 'asc',
                displayPosition: 2,
                sortByPosition: 5,
                value: 'NA',
                options: ['NA', 'OPEN', 'REOPEN', 'DOING', 'PENDING', 'DONE', 'CANCEL', 'NOT_GOOD'],
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'date',
                headerName: 'Review 1 Start Time',
                field: 'review1StartTime',
                width: 175,
                cellRenderer: null,
                format: 'datetime',
                colId: 'review1StartTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 2,
                sortByPosition: 6,
                hide: true,
                // hideDynamicField: true,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'date',
                headerName: 'Review 1 End Time',
                field: 'review1EndTime',
                width: 175,
                cellRenderer: null,
                format: 'datetime',
                colId: 'review1EndTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 2,
                sortByPosition: 7,
                hide: true,
                // hideDynamicField: true,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'Fixer',
                field: 'fixer',
                width: 150,
                cellRenderer: null,
                colId: 'fixer',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 3,
                sortByPosition: 4,
                value: null,
                hide: false,
                options: null,
                urlOption: null,
                reuseData: 'op',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'Fix Status',
                field: 'fixStatus',
                width: 150,
                cellRenderer: null,
                colId: 'fixStatus',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 3,
                sortByPosition: 5,
                hide: false,
                value: 'NA',
                options: ['NA', 'OPEN', 'DOING', 'PENDING', 'DONE', 'CANCEL', 'REOPEN', 'RE_ASSIGN', 'RE_ASSIGN_REVIEW1'],
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'date',
                headerName: 'Fix Start Time',
                field: 'fixStartTime',
                width: 175,
                cellRenderer: null,
                format: 'datetime',
                colId: 'fixStartTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 3,
                sortByPosition: 6,
                hide: true,
                // hideDynamicField: true,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'date',
                headerName: 'Fix End Time',
                field: 'fixEndTime',
                width: 175,
                cellRenderer: null,
                format: 'datetime',
                colId: 'fixEndTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 3,
                sortByPosition: 7,
                hide: true,
                // hideDynamicField: true,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'Reviewer 2',
                field: 'review2',
                width: 170,
                cellRenderer: null,
                colId: 'review2',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 3,
                sortByPosition: 0,
                value: null,
                options: null,
                hide: false,
                urlOption: null,
                reuseData: 'op',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'Review 2 Status',
                field: 'review2Status',
                width: 180,
                cellRenderer: null,
                colId: 'review2Status',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                hide: false,
                sort: 'asc',
                displayPosition: 3,
                sortByPosition: 1,
                value: 'NA',
                options: ['NA', 'OPEN', 'REOPEN', 'DOING', 'PENDING', 'DONE', 'CANCEL', 'NOT_GOOD'],
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'date',
                headerName: 'Review 2 Start Time',
                field: 'review2StartTime',
                width: 175,
                cellRenderer: null,
                format: 'datetime',
                colId: 'review2StartTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 3,
                sortByPosition: 2,
                hide: true,
                // hideDynamicField: true,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'date',
                headerName: 'Review 2 End Time',
                field: 'review2EndTime',
                width: 175,
                cellRenderer: null,
                format: 'datetime',
                colId: 'review2EndTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 3,
                sortByPosition: 3,
                hide: true,
                // hideDynamicField: true,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'FI',
                field: 'fi',
                width: 150,
                cellRenderer: null,
                colId: 'fi',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 3,
                sortByPosition: 8,
                value: null,
                hide: false,
                options: null,
                urlOption: null,
                reuseData: 'op',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'select',
                inputType: 'single',
                headerName: 'FI Status',
                field: 'fiStatus',
                width: 150,
                cellRenderer: null,
                colId: 'fiStatus',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 3,
                sortByPosition: 9,
                value: 'NA',
                hide: false,
                options: ['NA', 'OPEN', 'DOING', 'PENDING', 'DONE', 'CANCEL', 'NOT_GOOD'],
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'date',
                headerName: 'FI Start Time',
                field: 'fiStartTime',
                width: 175,
                cellRenderer: null,
                format: 'datetime',
                colId: 'fiStartTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 3,
                sortByPosition: 10,
                hide: true,
                // hideDynamicField: true,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'date',
                headerName: 'FI End Time',
                field: 'fiEndTime',
                width: 175,
                cellRenderer: null,
                format: 'datetime',
                colId: 'fiEndTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 3,
                sortByPosition: 11,
                hide: true,
                // hideDynamicField: true,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'input',
                inputType: 'text',
                headerName: 'Duration',
                field: 'duration',
                width: 150,
                cellRenderer: null,
                colId: 'duration',
                editable: false,
                // filter: 'agNumberColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 1,
                sortByPosition: 6,
                hide: false,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                type: 'input',
                inputType: 'number',
                headerName: 'Target',
                field: 'target',
                width: 150,
                cellRenderer: null,
                editable: false,
                colId: 'target',
                // filter: 'agNumberColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 0,
                sortByPosition: 7,
                hide: false,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                type: 'input',
                inputType: 'number',
                headerName: 'Error Quantity',
                field: 'errorQuantity',
                width: 170,
                cellRenderer: null,
                colId: 'errorQuantity',
                editable: false,
                // filter: 'agNumberColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 1,
                sortByPosition: 7,
                hide: false,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                headerName: 'Error Severity',
                field: 'errorSeverity',
                width: 170,
                cellRenderer: null,
                colId: 'errorSeverity',
                editable: false,
                // filter: 'agNumberColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 1,
                sortByPosition: 8,
                value: 'NA',
                options: ['NA', 'TRIVIAL', 'MINOR', 'MAJOR', 'CRITICAL'],
                hide: false,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            {
                position: 'Task',
                type: 'textarea',
                headerName: 'Description',
                field: 'description',
                width: 160,
                cellRenderer: null,
                colId: 'description',
                editable: false,
                // filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                displayPosition: 0,
                sortByPosition: 8,
                hide: false,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            }
            /*{
                position: 'Task',
                type: 'select',
                headerName: 'Package',
                field: 'packagesName',
                width: 150,
                cellRenderer: null,
                colId: 'packagesName',
                hideDynamicField: true,
                editable: false,
                filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                value: null,
                options: null,
                urlOption: '',
                hide: true,
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                },
            },
            /*{
                position: 'Task',
                type: 'select',
                headerName: 'OP',
                field: 'op',
                width: 150,
                cellRenderer: null,
                colId: 'op',
                editable: false,
                filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                value: null,
                options: null,
                urlOption: 'api/users-selects',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'select',
                headerName: 'Fixer',
                field: 'fixer',
                width: 150,
                cellRenderer: null,
                colId: 'fixer',
                editable: false,
                filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                value: null,
                options: null,
                urlOption: 'api/users-selects',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'select',
                headerName: 'Reviewer 1',
                field: 'review1',
                width: 150,
                cellRenderer: null,
                colId: 'review1',
                editable: false,
                filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                value: null,
                options: null,
                urlOption: 'api/users-selects',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'select',
                headerName: 'Reviewer 2',
                field: 'review2',
                width: 150,
                cellRenderer: null,
                colId: 'review2',
                editable: false,
                filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                value: null,
                options: null,
                urlOption: 'api/users-selects',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },
            {
                position: 'Task',
                type: 'select',
                headerName: 'FI',
                field: 'fi',
                width: 150,
                cellRenderer: null,
                colId: 'fi',
                editable: false,
                filter: 'agTextColumnFilter',
                sortable: true,
                sort: 'asc',
                value: null,
                options: null,
                urlOption: 'api/users-selects',
                properties: {
                    isActiveOnPM: false,
                    isActiveOnOP: false,
                    isRequiredOnPM: false,
                    isRequiredOnOP: false,
                    isRequiredField: false,
                    isActivityField: true,
                },
            },*/
        ];
    }

    public static get ProjectTemplateItems(): FieldConfig[] {
        return [
            {
                headerName: 'Project Template Name',
                field: 'name',
                width: 130,
                cellRenderer: null,
                colId: 'name',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Image',
                field: 'imageContentType',
                width: 100,
                cellRenderer: null,
                colId: 'imageContentType',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: true,
            },
            {
                headerName: 'Business Line Name',
                field: 'businessLineName',
                width: 100,
                cellRenderer: null,
                colId: 'businessLineName',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                hide: false,
                sort: 'asc',
            },
            {
                headerName: 'Description',
                field: 'description',
                width: 150,
                cellRenderer: null,
                colId: 'description',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'id',
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        'export': 'api/project-templates/export?templateId=',
                        'view': '../project-templates',
                        'edit': 'project-templates/',
                        'delete': 'project-templates/'
                    },
                },
                editable: false,
            },
        ];
    }

    public static get ProjectItems(): FieldConfig[] {
        return [
            {
                headerName: 'Project Code',
                field: 'code',
                width: 130,
                cellRenderer: null,
                colId: 'code',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Project Name',
                field: 'name',
                width: 130,
                cellRenderer: null,
                colId: 'name',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Type',
                field: 'type',
                width: 110,
                cellRenderer: null,
                colId: 'type',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: true,
            },
            {
                headerName: 'Status',
                field: 'status',
                width: 80,
                cellRenderer: null,
                colId: 'status',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Bidding Hold Time',
                field: 'biddingHoldTime',
                width: 80,
                cellRenderer: null,
                colId: 'biddingHoldTime',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Start Time',
                field: 'startTime',
                width: 130,
                cellRenderer: (data) => {
                    return moment(data.value).format('DD/MM/YYYY');
                },
                colId: 'startTime',
                // filter: 'agDateColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'End Time',
                field: 'endTime',
                width: 150,
                cellRenderer: (data) => {
                    return moment(data.value).format('DD/MM/YYYY');
                },
                colId: 'endTime',
                // filter: 'agDateColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Description',
                field: 'description',
                width: 150,
                cellRenderer: null,
                colId: 'description',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: true,
            },
            {
                headerName: 'Project Templates Name',
                field: 'projectTemplatesName',
                width: 150,
                cellRenderer: null,
                colId: 'projectTemplatesName',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'PM',
                field: 'projectLeadUserLogin',
                width: 100,
                cellRenderer: null,
                colId: 'projectLeadUserLogin',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Business Unit',
                field: 'businessUnitName',
                width: 150,
                cellRenderer: null,
                colId: 'businessUnitName',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Customer',
                field: 'customerName',
                width: 150,
                cellRenderer: null,
                colId: 'customerName',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'id',
                width: 400,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        'manager': '../project-users-list',
                        'view': '../projects',
                        'edit': 'projects/',
                        'delete': 'projects/',
                        'bugList': '../project-bug-list-defaults',
                        'project_export': 'api/projects/export?projectId=',
                    },
                },
                editable: false,
            },
        ];
    }

    public static get AuthorityItems(): FieldConfig[] {
        return [
            {
                headerName: 'Authority Name',
                field: 'name',
                width: 250,
                cellRenderer: null,
                colId: 'name',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Permission',
                field: 'permission',
                width: 150,
                cellRenderer: null,
                colId: 'permission',
                // filter: 'agNumberColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: true,
            },
            {
                headerName: 'Actions',
                field: 'name',
                width: 350,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        'edit': 'authority-resource/',
                        'delete': 'authority-resource/'
                    },
                },
                editable: false,
            }
        ];
    }

    public static get ProjectUserListItems(): FieldConfig[] {
        return [
            {
                headerName: 'User Login',
                field: 'userLogin',
                width: 250,
                cellRenderer: null,
                colId: 'userLogin',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Role Name',
                field: 'roleName',
                width: 150,
                cellRenderer: null,
                colId: 'roleName',
                // filter: 'agNumberColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Start Date',
                field: 'startDate',
                width: 100,
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY') : '';
                },
                colId: 'roleName',
                // filter: 'agNumberColumnFilter',
                editable: false,
                sortable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'End Date',
                field: 'endDate',
                width: 100,
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY') : '';
                },
                colId: 'roleName',
                // filter: 'agNumberColumnFilter',
                editable: false,
                sortable: false,
                sort: 'asc',
                hide: false,
            },
            /*{
                headerName: 'Project Name',
                field: 'Project Name',
                width: 150,
                cellRenderer: null,
                colId: 'projectName',
                filter: 'agNumberColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: true,
            },*/
            {
                headerName: 'Actions',
                field: 'id',
                width: 170,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        'edit': 'project-users/',
                        'delete': 'project-users/',
                        'viewMember': '../../../project-member'
                    },
                },
                editable: false,
            }
        ];
    }

    public static get ProjectBugListDefaultsItems(): FieldConfig[] {
        return [
            {
                headerName: 'Bug code',
                field: 'code',
                cellRenderer: null,
                colId: 'code',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Description',
                field: 'bugListDefaultDescription',
                cellRenderer: null,
                colId: 'bugListDefaultDescription',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Project Name',
                field: 'projectName',
                cellRenderer: null,
                colId: 'projectName',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'id',
                width: 40,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        'delete': 'project-bug-list-defaults/'
                    },
                },
                editable: false,
            },
        ];
    }

    public static get BusinessLineItems(): FieldConfig[] {
        return [
            {
                headerName: 'Business Line Name',
                field: 'name',
                width: 100,
                cellRenderer: null,
                colId: 'name',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Description',
                field: 'description',
                cellRenderer: null,
                colId: 'description',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'id',
                width: 100,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        'view': '../business-line',
                        'edit': 'business-line/',
                        'delete': 'business-line/'
                    },
                },
                editable: false,
            },
        ];
    }

    public static get MembersManagementItems(): FieldConfig[] {
        return [
            {
                headerName: 'First Name',
                field: 'firstName',
                cellRenderer: null,
                colId: 'firstName',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Last Name',
                field: 'lastName',
                cellRenderer: null,
                colId: 'lastName',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Email',
                field: 'email',
                width: 100,
                cellRenderer: null,
                colId: 'email',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Status',
                field: 'status',
                cellRenderer: (data) => {
                    return data.value === true ? 'online' : 'offline';
                },
                colId: 'status',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Login Start Time',
                field: 'startTime',
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY HH:mm:ss') : '';
                },
                colId: 'startTime',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'login',
                width: 100,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        'view': '../members-management',
                    },
                },
                editable: false,
            },
        ];
    }

    public static get HistoryMembersItems(): FieldConfig[] {
        return [
            {
                headerName: 'Project Name',
                field: 'projectName',
                cellRenderer: null,
                colId: 'projectName',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Project Role',
                field: 'roleName',
                cellRenderer: null,
                colId: 'roleName',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Start Time Join',
                field: 'startDate',
                width: 100,
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY') : '';
                },
                colId: 'startDate',
                // filter: 'agDateColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'End Time Join',
                field: 'endDate',
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY') : '';
                },
                colId: 'endDate',
                // filter: 'agDateColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Total Time(days)',
                field: 'days',
                cellRenderer: null,
                colId: 'days',
                // filter: 'agNumberColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            }
        ];
    }

    public static get CustomerItems(): FieldConfig[] {
        return [
            {
                headerName: 'Customer Code',
                field: 'code',
                cellRenderer: null,
                colId: 'code',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Customer Name',
                field: 'name',
                cellRenderer: null,
                colId: 'name',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Type',
                field: 'type',
                width: 100,
                cellRenderer: null,
                colId: 'type',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Customer Status',
                field: 'status',
                width: 100,
                cellRenderer: null,
                colId: 'status',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Description',
                field: 'description',
                cellRenderer: null,
                colId: 'description',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'id',
                width: 150,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        'view': '../customer',
                        'edit': 'customer/',
                        'delete': 'customer/'
                    },
                },
                editable: false,
            },
        ];
    }

    public static get MailItems(): FieldConfig[] {
        return [
            {
                headerName: 'To',
                field: 'from',
                cellRenderer: null,
                colId: 'from',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Subject',
                field: 'subject',
                cellRenderer: null,
                colId: 'subject',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Body',
                field: 'body',
                width: 100,
                cellRenderer: null,
                colId: 'body',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'StartTime',
                field: 'startTime',
                type: 'date',
                value: null,
                width: 180,
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY HH:mm:ss') : '';
                },
                colId: 'startTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'EndTime',
                field: 'endTime',
                type: 'date',
                value: null,
                width: 180,
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY HH:mm:ss') : '';
                },
                colId: 'endTime',
                editable: false,
                // filter: 'agDateColumnFilter',
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'id',
                width: 180,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        'view': '../mail',
                        'edit': 'mail/',
                        'delete': 'mail/'
                    },
                },
                editable: false,
            },
        ];
    }

    public static get TrackingItems(): FieldConfig[] {
        return [
            {
                headerName: 'General',
                children: [
                    {
                        headerName: 'Task Name',
                        field: 'name',
                        cellRenderer: null,
                        colId: 'name',
                        // filter: 'agTextColumnFilter',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: false,
                    },
                    {
                        headerName: 'Working Objects',
                        field: 'frame',
                        cellRenderer: null,
                        colId: 'frame',
                        // filter: 'agTextColumnFilter',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: false,
                    },
                    {
                        headerName: 'Total Bugs Open',
                        field: 'totalBugOpen',
                        cellRenderer: null,
                        colId: 'totalBugOpen',
                        // filter: 'agTextColumnFilter',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: false,
                    },
                    {
                        headerName: 'Total Bugs',
                        field: 'totalBugsTask',
                        cellRenderer: null,
                        colId: 'totalBugsTask',
                        // filter: 'agTextColumnFilter',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: false,
                    },
                ]
            },
            {
                headerName: 'Review2',
                hide: true,
            },
            {
                headerName: 'Fi',
                hide: true,
            },
            {
                headerName: 'Fixer',
                hide: true,
            },
            {
                headerName: '',
                children: [
                    {
                        headerName: 'data',
                        field: 'data',
                        colId: 'data',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: true,
                    },
                    {
                        headerName: 'file_name',
                        field: 'file_name',
                        colId: 'file_name',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: true,
                    },
                    {
                        headerName: 'type',
                        field: 'type',
                        colId: 'type',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: true,
                    },
                    {
                        headerName: 'availability',
                        field: 'availability',
                        colId: 'availability',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: true,
                    },
                    {
                        headerName: 'frame',
                        field: 'frame',
                        colId: 'frame',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: true,
                    },
                    {
                        headerName: 'actual_object',
                        field: 'actual_object',
                        colId: 'actual_object',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: true,
                    },
                    {
                        headerName: 'duration',
                        field: 'duration',
                        colId: 'duration',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: true,
                    },
                    {
                        headerName: 'target',
                        field: 'target',
                        colId: 'target',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: true,
                    },
                    {
                        headerName: 'error_quantity',
                        field: 'error_quantity',
                        colId: 'error_quantity',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: true,
                    },
                    {
                        headerName: 'error_severity',
                        field: 'error_severity',
                        colId: 'error_severity',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: true,
                    },
                    {
                        headerName: 'parent',
                        field: 'parent',
                        colId: 'parent',
                        editable: false,
                        sort: 'asc',
                        sortable: true,
                        hide: true,
                    },
                ]
            },
        ];
    }

    public static get TrackingMemberItems(): FieldConfig[] {
        return [
            {
                headerName: 'Member',
                field: 'userLogin',
                cellRenderer: null,
                colId: 'userLogin',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                width: 230,
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Total Tasks Assign',
                field: 'totalTasks',
                cellRenderer: null,
                colId: 'totalTasks',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                width: 200,
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Total Task Has Bugs',
                field: 'totalTaskBug',
                cellRenderer: null,
                colId: 'totalTaskBug',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                width: 200,
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Total Bugs',
                field: 'totalBugs',
                cellRenderer: null,
                colId: 'totalBugs',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                width: 200,
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Task Rate Has Error',
                field: 'ratioTask',
                cellRenderer: null,
                colId: 'ratioTask',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                width: 200,
                sortable: true,
                hide: false,
            }
        ];
    }

    public static get ListBugItems(): FieldConfig[] {
        return [
            {
                headerName: 'Business Line',
                field: 'businessLineName',
                cellRenderer: null,
                colId: 'businessLineName',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Status Bug',
                field: 'status',
                cellRenderer: null,
                colId: 'status',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Description',
                field: 'description',
                cellRenderer: null,
                colId: 'description',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'id',
                width: 150,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        'view': '../bug-list-default',
                        'edit': 'bug-list-default/',
                        'delete': 'bug-list-default/'
                    },
                },
                editable: false,
            },
        ];
    }

    public static get BugItems(): FieldConfig[] {
        return [
            {
                headerName: 'Bug Code',
                field: 'code',
                cellRenderer: null,
                colId: 'code',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Description',
                field: 'description',
                cellRenderer: null,
                colId: 'description',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Create By',
                field: 'createdBy',
                cellRenderer: null,
                colId: 'createdBy',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Status Bug',
                field: 'status',
                cellRenderer: null,
                colId: 'status',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Resolution Bug',
                field: 'resolution',
                cellRenderer: null,
                colId: 'resolution',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Stage Bug',
                field: 'stage',
                cellRenderer: null,
                colId: 'stage',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
        ];
    }

    public static get RolesItems(): FieldConfig[] {
        return [
            {
                headerName: '',
                field: '',
                checkboxSelection: true,
                colId: '',
                // filter: '',
                editable: false,
                hide: false,
            },
            {
                headerName: 'Roles',
                field: 'name',
                cellRenderer: null,
                colId: 'name',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            }
        ];
    }

    public static get BusinessUnitItems(): FieldConfig[] {
        return [
            {
                headerName: 'Business Unit Code',
                field: 'code',
                cellRenderer: null,
                colId: 'code',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Business Unit Name',
                field: 'name',
                cellRenderer: null,
                colId: 'name',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Description',
                field: 'description',
                cellRenderer: null,
                colId: 'description',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'id',
                width: 150,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        'view': '../business-unit',
                        'edit': 'business-unit/',
                        'delete': 'business-unit/'
                    },
                },
                editable: false,
            },
        ];
    }

    public static get BusinessUnitManagerItems(): FieldConfig[] {
        return [
            {
                headerName: 'Manager',
                field: 'managerLogin',
                cellRenderer: null,
                colId: 'manager',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Business Unit Name',
                field: 'businessUnitName',
                cellRenderer: null,
                colId: 'businessUnitName',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Start Time',
                field: 'startTime',
                width: 150,
                cellRenderer: (data) => {
                    if (data.value) {
                        return moment(data.value).format('DD/MM/YYYY');
                    } else {
                        return '';
                    }
                },
                colId: 'startTime',
                // filter: 'agDateColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'End Time',
                field: 'endTime',
                width: 150,
                cellRenderer: (data) => {
                    if (data.value) {
                        return moment(data.value).format('DD/MM/YYYY');
                    } else {
                        return '';
                    }
                },
                colId: 'endTime',
                // filter: 'agDateColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Description',
                field: 'description',
                cellRenderer: null,
                colId: 'description',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'id',
                width: 150,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        'view': '../business-unit-manager',
                        'edit': 'business-unit-manager/',
                        'delete': 'business-unit-manager/'
                    },
                },
                editable: false,
            },
        ];
    }

    public static get AllocationItems(): FieldConfig[] {
        return [
            {
                headerName: 'User Name',
                field: 'userLogin',
                cellRenderer: null,
                colId: 'userLogin',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Role',
                field: 'roleName',
                cellRenderer: null,
                colId: 'roleName',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Effort Plan(h)',
                field: 'effortPlan',
                cellRenderer: null,
                colId: 'effortPlan',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'From Date',
                field: 'startDate',
                cellRenderer: null,
                colId: 'startDate',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'To Date',
                field: 'endDate',
                cellRenderer: null,
                colId: 'endDate',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Total Effort Plan(h)',
                field: 'totalEffortPlan',
                cellRenderer: null,
                colId: 'totalEffortPlan',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Actual Effort(h)',
                field: 'workingEffort',
                cellRenderer: null,
                colId: 'workingEffort',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Contract Type',
                field: 'contractType',
                cellRenderer: null,
                colId: 'contractType',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Location',
                field: 'workingLocation',
                cellRenderer: null,
                colId: 'workingLocation',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'id',
                width: 100,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        'view': '../allocation',
                    },
                },
                editable: false,
            },
        ];
    }

    public static get EffortPackageItems(): FieldConfig[] {
        return [
            {
                headerName: 'Package Name',
                field: 'packageName',
                cellRenderer: null,
                colId: 'packageName',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Total Tasks',
                field: 'totalTasks',
                cellRenderer: null,
                colId: 'totalTasks',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Actual Effort(h)',
                field: 'actualEffort',
                cellRenderer: null,
                colId: 'actualEffort',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            }
        ];
    }

    public static get EffortItems(): FieldConfig[] {
        return [
            {
                headerName: 'Month',
                field: 'month',
                cellRenderer: null,
                colId: 'month',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'OP Effort(h)',
                field: 'op',
                cellRenderer: null,
                colId: 'op',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Review1 Effort(h)',
                field: 'review1',
                cellRenderer: null,
                colId: 'review1',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Review2 Effort(h)',
                field: 'review2',
                cellRenderer: null,
                colId: 'review2',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Fixer Effort(h)',
                field: 'fixer',
                cellRenderer: null,
                colId: 'fixer',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Fi Effort(h)',
                field: 'fi',
                cellRenderer: null,
                colId: 'fi',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Total Effort Plan In Project(h)',
                field: 'totalEffortPlan',
                cellRenderer: null,
                colId: 'totalEffortPlan',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Total Actual Effort(h)',
                field: 'totalActualEffort',
                cellRenderer: null,
                colId: 'totalActualEffort',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
        ];
    }

    public static get TMSCustomFieldItems(): FieldConfig[] {
        return [
            {
                headerName: 'Field Name',
                field: 'entityData.headerName',
                cellRenderer: null,
                colId: 'entityData.headerName',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Type',
                field: 'entityData.type',
                cellRenderer: (value) => {
                    if (value.data.entityData.inputType === 'text') {
                        return 'STRING';
                    } else if (value.data.entityData.inputType === 'number') {
                        return 'NUMERIC';
                    } else if (value.data.entityData.inputType === 'password') {
                        return 'PASSWORD';
                    } else if (value.data.entityData.inputType === 'email') {
                        return 'EMAIL';
                    } else if (value.data.entityData.inputType === 'single') {
                        return 'LIST';
                    } else if (value.data.entityData.inputType === 'multiple') {
                        return 'MULTI_SELECTION_LIST';
                    } else if (value.data.entityData.format === 'date') {
                        return 'SHORT_DATE';
                    } else if (value.data.entityData.format === 'datetime') {
                        return 'LONG_DATE';
                    }
                },
                colId: 'entityData.type',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Value',
                field: 'entityData.value',
                cellRenderer: (data) => {
                    if (data.data.entityData.format === 'datetime') {
                        return data.value != null ? moment(data.value).format('DD/MM/YYYY HH:mm:ss') : '';
                    } else if (data.data.entityData.format === 'date') {
                        return data.value != null ? moment(data.value).format('DD/MM/YYYY') : '';
                    } else {
                        return data.value;
                    }
                },
                colId: 'entityData.value',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Options',
                field: 'entityData.options',
                cellRenderer: null,
                colId: 'entityData.options',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'API',
                field: 'entityData.urlOption',
                cellRenderer: null,
                colId: 'entityData.urlOption',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Reuse Data',
                field: 'entityData.reuseData',
                cellRenderer: null,
                colId: 'entityData.reuseData',
                editable: false,
                sort: 'asc',
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'id',
                width: 200,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        view: '../tms-custom-field',
                        editCustom: '../tms-custom-field-create',
                        delete: 'tms-custom-field/'
                    },
                },
                editable: false,
            }
        ];
    }

    public static get TaskBidding(): FieldConfig[] {
        return [
            {
                headerName: '',
                headerCheckboxSelection: true,
                width: 40,
                checkboxSelection: true,
            },
            {
                headerName: 'Task Name',
                field: 'name',
                width: 100,
                cellRenderer: null,
                colId: 'name',
                editable: false,
                sortable: true,
                hide: false,
            },
            {
                position: 'Task',
                type: 'select',
                headerName: 'OP',
                field: 'op',
                width: 150,
                cellRenderer: null,
                colId: 'op',
                editable: false,
                sortable: true,
            },
            {
                position: 'Task',
                type: 'select',
                headerName: 'Reviewer 1',
                field: 'review1',
                width: 170,
                cellRenderer: null,
                colId: 'review1',
                editable: false,
                sortable: true,
            },
            {
                position: 'Task',
                type: 'select',
                headerName: 'Reviewer 2',
                field: 'review2',
                width: 150,
                cellRenderer: null,
                colId: 'review2',
                editable: false,
                sortable: true,
            },
            {
                headerName: 'FI',
                field: 'fi',
                cellRenderer: null,
                colId: 'fi',
                editable: false,
                hide: false,
                sortable: true,
            },
            {
                headerName: 'Fixer',
                field: 'fixer',
                cellRenderer: null,
                colId: 'fixer',
                editable: false,
                hide: false,
                sortable: true,
            },
            {
                headerName: 'Start Date',
                field: 'estimateStartTime',
                format: 'datetime',
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY HH:mm:ss') : '';
                },
                colId: 'estimateStartTime',
                editable: false,
                hide: false,
                sortable: true,
            },
            {
                headerName: 'End Date',
                field: 'estimateEndTime',
                format: 'datetime',
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY HH:mm:ss') : '';
                },
                colId: 'estimateEndTime',
                editable: false,
                hide: false,
                sortable: true,
            },
            {
                headerName: 'Duration',
                field: 'duration',
                cellRenderer: null,
                colId: 'duration',
                editable: false,
                hide: false,
                sortable: true,
            },
            {
                headerName: 'Priority',
                field: 'priority',
                cellRenderer: null,
                colId: 'priority',
                editable: false,
                hide: false,
                sortable: true,
            },
            {
                headerName: 'Task Status',
                field: 'status',
                cellRenderer: null,
                colId: 'status',
                editable: false,
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'id',
                width: 200,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        view: '../tasks',
                        edit: 'tasks/',
                    },
                },
                editable: false,
            }
        ];
    }

    public static get TaskBiddingClassify(): FieldConfig[] {
        return [
            {
                headerName: '',
                width: 40,
                headerCheckboxSelection: true,
                checkboxSelection: true
            },
            {
                headerName: 'Task Name',
                field: 'task.name',
                cellRenderer: null,
                colId: 'name',
                // filter: 'agTextColumnFilter',
                editable: false,
                sortable: true,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Step',
                field: 'biddingRound',
                cellRenderer: (data) => {
                    if (data.value) {
                        return data.value.toLocaleUpperCase();
                    }
                    return null;
                },
                colId: 'biddingRound',
                width: 80,
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'PIC',
                field: 'pic',
                cellRenderer: null,
                colId: 'pic',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Start Date',
                field: 'startDate',
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY HH:mm:ss') : '';
                },
                colId: 'startDate',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'End Date',
                field: 'endDate',
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY HH:mm:ss') : '';
                },
                colId: 'endDate',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Duration',
                field: 'task.duration',
                cellRenderer: null,
                colId: 'duration',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Priority',
                field: 'priority',
                cellRenderer: null,
                colId: 'priority',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Bidding Status',
                field: 'biddingStatus',
                cellRenderer: null,
                colId: 'biddingStatus',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Purchase Order',
                field: 'purchaseOrdersName',
                cellRenderer: null,
                colId: 'purchaseOrdersName',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Package',
                field: 'task.packagesName',
                cellRenderer: null,
                colId: 'packagesName',
                // filter: 'agTextColumnFilter',
                editable: false,
                sort: 'asc',
                hide: false,
            },
            {
                headerName: 'Actions',
                field: 'task.id',
                width: 100,
                cellRenderer: 'actionsButton',
                cellRendererParams: {
                    routers: {
                        view: '../tasks'
                    },
                },
                editable: false
            }
        ];
    }

    public static get TaskMove(): FieldConfig[] {
        return [
            {
                headerName: '',
                headerCheckboxSelection: true,
                width: 40,
                checkboxSelection: true,
            },
            {
                headerName: 'Task Name',
                field: 'name',
                width: 100,
                cellRenderer: null,
                colId: 'name',
                editable: false,
                sortable: true,
                hide: false,
            },
            {
                headerName: 'Task Status',
                field: 'status',
                cellRenderer: null,
                colId: 'status',
                editable: false,
                hide: false,
            },
            {
                headerName: 'Start Date',
                field: 'estimateStartTime',
                format: 'datetime',
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY HH:mm:ss') : '';
                },
                colId: 'estimateStartTime',
                editable: false,
                hide: false,
                sortable: true,
            },
            {
                headerName: 'End Date',
                field: 'estimateEndTime',
                format: 'datetime',
                cellRenderer: (data) => {
                    return data.value != null ? moment(data.value).format('DD/MM/YYYY HH:mm:ss') : '';
                },
                colId: 'estimateEndTime',
                editable: false,
                hide: false,
                sortable: true,
            }
        ];
    }
}
